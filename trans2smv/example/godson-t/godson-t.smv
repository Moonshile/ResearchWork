
-- This program is generated by trans2smv from its forte version. --

MODULE main

VAR
    curCache : {1, 2};
    curData : {1, 2};
    curLock : {1, 2};
    curMemory : {1, 2};
    curNode : {1, 2};
    lock.beUsed[1] : {true, false};
    lock.beUsed[2] : {true, false};
    lock.inProtection[1] : {true, false};
    lock.inProtection[2] : {true, false};
    lock.inProtection[3] : {true, false};
    lock.inProtection[4] : {true, false};
    lock.owner[1] : {1, 2};
    lock.owner[2] : {1, 2};
    memory.data[1] : {1, 2};
    memory.data[2] : {1, 2};
    node.cache.addr[1] : {1, 2};
    node.cache.addr[2] : {1, 2};
    node.cache.addr[3] : {1, 2};
    node.cache.addr[4] : {1, 2};
    node.cache.data[1] : {1, 2};
    node.cache.data[2] : {1, 2};
    node.cache.data[3] : {1, 2};
    node.cache.data[4] : {1, 2};
    node.cache.state[1] : {invalid, dirty, valid};
    node.cache.state[2] : {invalid, dirty, valid};
    node.cache.state[3] : {invalid, dirty, valid};
    node.cache.state[4] : {invalid, dirty, valid};
    node.firstRead[1] : {true, false};
    node.firstRead[2] : {true, false};
    node.firstRead[3] : {true, false};
    node.firstRead[4] : {true, false};
    node.hasLock[1] : {true, false};
    node.hasLock[2] : {true, false};
    repRule : {none, nlncr, nlncw, lncfr, lcfr, lncnfr};
    replace : {non, require, reqrepall, random, randinv, designated, torep, done, repalldone};
    cur_rule : {c_Acquire11000, c_Acquire21000, c_Acquire12000, c_Acquire22000, c_CRC10000, c_CRC20000, c_CRIC11000, c_CRIC21000, c_CRIC12000, c_CRIC22000, c_DCD11000, c_DCD21000, c_DCD12000, c_DCD22000, c_DCND11000, c_DCND21000, c_DCND12000, c_DCND22000, c_LCFRAD00000, c_LCFRD11110, c_LCFRD21110, c_LCFRD12110, c_LCFRD22110, c_LCFRD11210, c_LCFRD21210, c_LCFRD12210, c_LCFRD22210, c_LCFRD11120, c_LCFRD21120, c_LCFRD12120, c_LCFRD22120, c_LCFRD11220, c_LCFRD21220, c_LCFRD12220, c_LCFRD22220, c_LCFRRA11110, c_LCFRRA21110, c_LCFRRA12110, c_LCFRRA22110, c_LCFRRA11210, c_LCFRRA21210, c_LCFRRA12210, c_LCFRRA22210, c_LCFRRA11120, c_LCFRRA21120, c_LCFRRA12120, c_LCFRRA22120, c_LCFRRA11220, c_LCFRRA21220, c_LCFRRA12220, c_LCFRRA22220, c_LCW11111, c_LCW21111, c_LCW12111, c_LCW22111, c_LCW11211, c_LCW21211, c_LCW12211, c_LCW22211, c_LCW11121, c_LCW21121, c_LCW12121, c_LCW22121, c_LCW11221, c_LCW21221, c_LCW12221, c_LCW22221, c_LCW11112, c_LCW21112, c_LCW12112, c_LCW22112, c_LCW11212, c_LCW21212, c_LCW12212, c_LCW22212, c_LCW11122, c_LCW21122, c_LCW12122, c_LCW22122, c_LCW11222, c_LCW21222, c_LCW12222, c_LCW22222, c_LNCFRAD00000, c_LNCFRD11110, c_LNCFRD21110, c_LNCFRD12110, c_LNCFRD22110, c_LNCFRD11210, c_LNCFRD21210, c_LNCFRD12210, c_LNCFRD22210, c_LNCFRD11120, c_LNCFRD21120, c_LNCFRD12120, c_LNCFRD22120, c_LNCFRD11220, c_LNCFRD21220, c_LNCFRD12220, c_LNCFRD22220, c_LNCFRRA11100, c_LNCFRRA21100, c_LNCFRRA12100, c_LNCFRRA22100, c_LNCFRRA11200, c_LNCFRRA21200, c_LNCFRRA12200, c_LNCFRRA22200, c_LNCNFRD11110, c_LNCNFRD21110, c_LNCNFRD12110, c_LNCNFRD22110, c_LNCNFRD11210, c_LNCNFRD21210, c_LNCNFRD12210, c_LNCNFRD22210, c_LNCNFRD11120, c_LNCNFRD21120, c_LNCNFRD12120, c_LNCNFRD22120, c_LNCNFRD11220, c_LNCNFRD21220, c_LNCNFRD12220, c_LNCNFRD22220, c_LNCNFRR11100, c_LNCNFRR21100, c_LNCNFRR12100, c_LNCNFRR22100, c_LNCNFRR11200, c_LNCNFRR21200, c_LNCNFRR12200, c_LNCNFRR22200, c_LNCW11110, c_LNCW21110, c_LNCW12110, c_LNCW22110, c_LNCW11210, c_LNCW21210, c_LNCW12210, c_LNCW22210, c_LNCW11120, c_LNCW21120, c_LNCW12120, c_LNCW22120, c_LNCW11220, c_LNCW21220, c_LNCW12220, c_LNCW22220, c_NLCW11110, c_NLCW21110, c_NLCW12110, c_NLCW22110, c_NLCW11210, c_NLCW21210, c_NLCW12210, c_NLCW22210, c_NLCW11120, c_NLCW21120, c_NLCW12120, c_NLCW22120, c_NLCW11220, c_NLCW21220, c_NLCW12220, c_NLCW22220, c_NLNCRD11100, c_NLNCRD21100, c_NLNCRD12100, c_NLNCRD22100, c_NLNCRD11200, c_NLNCRD21200, c_NLNCRD12200, c_NLNCRD22200, c_NLNCRR11000, c_NLNCRR21000, c_NLNCRR12000, c_NLNCRR22000, c_NLNCWD11110, c_NLNCWD21110, c_NLNCWD12110, c_NLNCWD22110, c_NLNCWD11210, c_NLNCWD21210, c_NLNCWD12210, c_NLNCWD22210, c_NLNCWD11120, c_NLNCWD21120, c_NLNCWD12120, c_NLNCWD22120, c_NLNCWD11220, c_NLNCWD21220, c_NLNCWD12220, c_NLNCWD22220, c_NLNCWR11100, c_NLNCWR21100, c_NLNCWR12100, c_NLNCWR22100, c_NLNCWR11200, c_NLNCWR21200, c_NLNCWR12200, c_NLNCWR22200, c_RI10000, c_RI20000, c_RNI10000, c_RNI20000, c_Release11000, c_Release21000, c_Release12000, c_Release22000, c_RepAll11100, c_RepAll21100, c_RepAll12100, c_RepAll22100, c_RepAll11200, c_RepAll21200, c_RepAll12200, c_RepAll22200, c_RepAllDone00000, c_Replace11100, c_Replace21100, c_Replace12100, c_Replace22100, c_Replace11200, c_Replace21200, c_Replace12200, c_Replace22200};

ASSIGN
    init(curCache) := 1;
    init(curData) := 1;
    init(curLock) := 1;
    init(curMemory) := 1;
    init(curNode) := 1;
    init(lock.beUsed[1]) := false;
    init(lock.beUsed[2]) := false;
    init(lock.inProtection[1]) := false;
    init(lock.inProtection[2]) := false;
    init(lock.inProtection[3]) := false;
    init(lock.inProtection[4]) := false;
    init(memory.data[1]) := 1;
    init(memory.data[2]) := 1;
    init(node.cache.state[1]) := invalid;
    init(node.cache.state[2]) := invalid;
    init(node.cache.state[3]) := invalid;
    init(node.cache.state[4]) := invalid;
    init(node.firstRead[1]) := true;
    init(node.firstRead[2]) := true;
    init(node.firstRead[3]) := true;
    init(node.firstRead[4]) := true;
    init(node.hasLock[1]) := false;
    init(node.hasLock[2]) := false;
    init(repRule) := none;
    init(replace) := non;
    next(curCache) := 
        case
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : 2;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : 2;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : 1;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : 1;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : 2;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : 2;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : 1;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : 1;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : 2;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : 2;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : 1;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : 1;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : 2;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : 2;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : 1;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : 1;
            ((cur_rule = c_CRIC22000)&((replace = randinv)&(2 = curNode)&(node.cache.state[4] = invalid))) : 2;
            ((cur_rule = c_CRIC12000)&((replace = randinv)&(1 = curNode)&(node.cache.state[2] = invalid))) : 2;
            ((cur_rule = c_CRIC21000)&((replace = randinv)&(2 = curNode)&(node.cache.state[3] = invalid))) : 1;
            ((cur_rule = c_CRIC11000)&((replace = randinv)&(1 = curNode)&(node.cache.state[1] = invalid))) : 1;
            ((cur_rule = c_CRC20000)&(replace = random)) : 2;
            ((cur_rule = c_CRC10000)&(replace = random)) : 1;
            TRUE : curCache;
        esac;
    next(curData) := 
        case
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 2;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 2;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 1;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 1;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            TRUE : curData;
        esac;
    next(curLock) := 
        case
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 2;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 2;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 1;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 1;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 2;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 2;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 1;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 1;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : 2;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : 2;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : 2;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : 2;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : 2;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : 2;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : 2;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : 2;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : 1;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : 1;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : 1;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : 1;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : 1;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : 1;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : 1;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : 1;
            TRUE : curLock;
        esac;
    next(curMemory) := 
        case
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_NLNCRR22000)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_NLNCRR12000)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 2;
            ((cur_rule = c_NLNCRR21000)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 1;
            ((cur_rule = c_NLNCRR11000)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : 2;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : 2;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : 2;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : 2;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : 1;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : 1;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : 1;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : 1;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : 2;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : 2;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : 2;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : 2;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : 1;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : 1;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : 1;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : 1;
            TRUE : curMemory;
        esac;
    next(curNode) := 
        case
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 1;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 2;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 1;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 2;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_NLNCRR22000)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_NLNCRR12000)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 1;
            ((cur_rule = c_NLNCRR21000)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 2;
            ((cur_rule = c_NLNCRR11000)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 1;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 2;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 1;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 2;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 1;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 2;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : 1;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : 2;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : 1;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : 2;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : 1;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : 2;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : 1;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : 2;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : 1;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : 2;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : 1;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : 2;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : 1;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : 2;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : 1;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : 2;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : 1;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : 2;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : 1;
            TRUE : curNode;
        esac;
    next(lock.beUsed[1]) := 
        case
            ((cur_rule = c_Release21000)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2))) : false;
            ((cur_rule = c_Release11000)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1))) : false;
            ((cur_rule = c_Acquire21000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[1] = false))) : true;
            ((cur_rule = c_Acquire11000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[1] = false))) : true;
            TRUE : lock.beUsed[1];
        esac;
    next(lock.beUsed[2]) := 
        case
            ((cur_rule = c_Release22000)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2))) : false;
            ((cur_rule = c_Release12000)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1))) : false;
            ((cur_rule = c_Acquire22000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[2] = false))) : true;
            ((cur_rule = c_Acquire12000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[2] = false))) : true;
            TRUE : lock.beUsed[2];
        esac;
    next(lock.inProtection[1]) := 
        case
            ((cur_rule = c_Release21000)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2))) : false;
            ((cur_rule = c_Release11000)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1))) : false;
            ((cur_rule = c_LNCW21210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LNCW11210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LNCW21110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LNCW11110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LCW22121)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW12121)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW21121)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW11121)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW22111)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW12111)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW21111)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW11111)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : true;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : true;
            TRUE : lock.inProtection[1];
        esac;
    next(lock.inProtection[2]) := 
        case
            ((cur_rule = c_Release21000)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2))) : false;
            ((cur_rule = c_Release11000)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1))) : false;
            ((cur_rule = c_LNCW22210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LNCW12210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LNCW22110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LNCW12110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LCW22221)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW12221)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW21221)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW11221)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW22211)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW12211)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW21211)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCW11211)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : true;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : true;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : true;
            TRUE : lock.inProtection[2];
        esac;
    next(lock.inProtection[3]) := 
        case
            ((cur_rule = c_Release22000)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2))) : false;
            ((cur_rule = c_Release12000)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1))) : false;
            ((cur_rule = c_LNCW21220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LNCW11220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LNCW21120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LNCW11120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LCW22122)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW12122)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW21122)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW11122)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW22112)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW12112)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW21112)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW11112)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : true;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : true;
            TRUE : lock.inProtection[3];
        esac;
    next(lock.inProtection[4]) := 
        case
            ((cur_rule = c_Release22000)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2))) : false;
            ((cur_rule = c_Release12000)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1))) : false;
            ((cur_rule = c_LNCW22220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LNCW12220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LNCW22120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LNCW12120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LCW22222)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW12222)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW21222)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW11222)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW22212)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW12212)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW21212)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCW11212)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : true;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : true;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : true;
            TRUE : lock.inProtection[4];
        esac;
    next(lock.owner[1]) := 
        case
            ((cur_rule = c_Acquire21000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[1] = false))) : 2;
            ((cur_rule = c_Acquire11000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[1] = false))) : 1;
            TRUE : lock.owner[1];
        esac;
    next(lock.owner[2]) := 
        case
            ((cur_rule = c_Acquire22000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[2] = false))) : 2;
            ((cur_rule = c_Acquire12000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[2] = false))) : 1;
            TRUE : lock.owner[2];
        esac;
    next(memory.data[1]) := 
        case
            ((cur_rule = c_Replace22100)&((replace = torep)&(2 = curNode)&(2 = curCache)&(1 = node.cache.addr[4]))) : node.cache.data[4];
            ((cur_rule = c_Replace12100)&((replace = torep)&(1 = curNode)&(2 = curCache)&(1 = node.cache.addr[2]))) : node.cache.data[2];
            ((cur_rule = c_Replace21100)&((replace = torep)&(2 = curNode)&(1 = curCache)&(1 = node.cache.addr[3]))) : node.cache.data[3];
            ((cur_rule = c_Replace11100)&((replace = torep)&(1 = curNode)&(1 = curCache)&(1 = node.cache.addr[1]))) : node.cache.data[1];
            ((cur_rule = c_RepAll22100)&((replace = reqrepall)&(node.cache.state[4] = dirty)&(1 = node.cache.addr[4]))) : node.cache.data[4];
            ((cur_rule = c_RepAll12100)&((replace = reqrepall)&(node.cache.state[2] = dirty)&(1 = node.cache.addr[2]))) : node.cache.data[2];
            ((cur_rule = c_RepAll21100)&((replace = reqrepall)&(node.cache.state[3] = dirty)&(1 = node.cache.addr[3]))) : node.cache.data[3];
            ((cur_rule = c_RepAll11100)&((replace = reqrepall)&(node.cache.state[1] = dirty)&(1 = node.cache.addr[1]))) : node.cache.data[1];
            ((cur_rule = c_LNCW21220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LNCW11220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LNCW21120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LNCW11120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LNCW21210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LNCW11210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LNCW21110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LNCW11110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW22122)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW12122)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW21122)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW11122)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW22112)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW12112)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW21112)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW11112)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW22121)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW12121)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW21121)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW11121)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW22111)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW12111)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW21111)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW11111)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            TRUE : memory.data[1];
        esac;
    next(memory.data[2]) := 
        case
            ((cur_rule = c_Replace22200)&((replace = torep)&(2 = curNode)&(2 = curCache)&(2 = node.cache.addr[4]))) : node.cache.data[4];
            ((cur_rule = c_Replace12200)&((replace = torep)&(1 = curNode)&(2 = curCache)&(2 = node.cache.addr[2]))) : node.cache.data[2];
            ((cur_rule = c_Replace21200)&((replace = torep)&(2 = curNode)&(1 = curCache)&(2 = node.cache.addr[3]))) : node.cache.data[3];
            ((cur_rule = c_Replace11200)&((replace = torep)&(1 = curNode)&(1 = curCache)&(2 = node.cache.addr[1]))) : node.cache.data[1];
            ((cur_rule = c_RepAll22200)&((replace = reqrepall)&(node.cache.state[4] = dirty)&(2 = node.cache.addr[4]))) : node.cache.data[4];
            ((cur_rule = c_RepAll12200)&((replace = reqrepall)&(node.cache.state[2] = dirty)&(2 = node.cache.addr[2]))) : node.cache.data[2];
            ((cur_rule = c_RepAll21200)&((replace = reqrepall)&(node.cache.state[3] = dirty)&(2 = node.cache.addr[3]))) : node.cache.data[3];
            ((cur_rule = c_RepAll11200)&((replace = reqrepall)&(node.cache.state[1] = dirty)&(2 = node.cache.addr[1]))) : node.cache.data[1];
            ((cur_rule = c_LNCW22220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LNCW12220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LNCW22120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LNCW12120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LNCW22210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LNCW12210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LNCW22110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LNCW12110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW22222)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW12222)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW21222)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW11222)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW22212)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW12212)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW21212)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW11212)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW22221)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW12221)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW21221)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW11221)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW22211)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW12211)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW21211)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW11211)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            TRUE : memory.data[2];
        esac;
    next(node.cache.addr[1]) := 
        case
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : 1;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : 2;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : 2;
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : 1;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : 1;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : 1;
            TRUE : node.cache.addr[1];
        esac;
    next(node.cache.addr[2]) := 
        case
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : 1;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : 2;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : 2;
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : 1;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : 1;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : 1;
            TRUE : node.cache.addr[2];
        esac;
    next(node.cache.addr[3]) := 
        case
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : 1;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : 2;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : 2;
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : 1;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : 1;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : 1;
            TRUE : node.cache.addr[3];
        esac;
    next(node.cache.addr[4]) := 
        case
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : 1;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : 2;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : 2;
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : 1;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : 1;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : 1;
            TRUE : node.cache.addr[4];
        esac;
    next(node.cache.data[1]) := 
        case
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : memory.data[2];
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : memory.data[1];
            ((cur_rule = c_NLCW11220)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLCW11120)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 2;
            ((cur_rule = c_NLCW11210)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 1;
            ((cur_rule = c_NLCW11110)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            ((cur_rule = c_LCW11222)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW11122)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW11212)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW11112)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW11221)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW11121)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW11211)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW11111)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            TRUE : node.cache.data[1];
        esac;
    next(node.cache.data[2]) := 
        case
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : memory.data[2];
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : memory.data[1];
            ((cur_rule = c_NLCW12220)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLCW12120)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 2;
            ((cur_rule = c_NLCW12210)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 1;
            ((cur_rule = c_NLCW12110)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            ((cur_rule = c_LCW12222)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW12122)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW12212)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW12112)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW12221)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW12121)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW12211)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW12111)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            TRUE : node.cache.data[2];
        esac;
    next(node.cache.data[3]) := 
        case
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : memory.data[2];
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : memory.data[1];
            ((cur_rule = c_NLCW21220)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLCW21120)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 2;
            ((cur_rule = c_NLCW21210)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 1;
            ((cur_rule = c_NLCW21110)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            ((cur_rule = c_LCW21222)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW21122)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW21212)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW21112)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW21221)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW21121)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW21211)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW21111)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            TRUE : node.cache.data[3];
        esac;
    next(node.cache.data[4]) := 
        case
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : memory.data[2];
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : memory.data[1];
            ((cur_rule = c_NLCW22220)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 2;
            ((cur_rule = c_NLCW22120)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 2;
            ((cur_rule = c_NLCW22210)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : 1;
            ((cur_rule = c_NLCW22110)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : 1;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            ((cur_rule = c_LCW22222)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW22122)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW22212)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW22112)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW22221)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW22121)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW22211)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW22111)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : memory.data[2];
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : memory.data[1];
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : memory.data[2];
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : memory.data[1];
            TRUE : node.cache.data[4];
        esac;
    next(node.cache.state[1]) := 
        case
            ((cur_rule = c_Replace11200)&((replace = torep)&(1 = curNode)&(1 = curCache)&(2 = node.cache.addr[1]))) : invalid;
            ((cur_rule = c_Replace11100)&((replace = torep)&(1 = curNode)&(1 = curCache)&(1 = node.cache.addr[1]))) : invalid;
            ((cur_rule = c_RepAll11200)&((replace = reqrepall)&(node.cache.state[1] = dirty)&(2 = node.cache.addr[1]))) : invalid;
            ((cur_rule = c_RepAll11100)&((replace = reqrepall)&(node.cache.state[1] = dirty)&(1 = node.cache.addr[1]))) : invalid;
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : valid;
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : valid;
            ((cur_rule = c_NLCW11220)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : dirty;
            ((cur_rule = c_NLCW11120)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : dirty;
            ((cur_rule = c_NLCW11210)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : dirty;
            ((cur_rule = c_NLCW11110)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : dirty;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LCW11222)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW11122)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW11212)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW11112)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW11221)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW11121)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW11211)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW11111)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            TRUE : node.cache.state[1];
        esac;
    next(node.cache.state[2]) := 
        case
            ((cur_rule = c_Replace12200)&((replace = torep)&(1 = curNode)&(2 = curCache)&(2 = node.cache.addr[2]))) : invalid;
            ((cur_rule = c_Replace12100)&((replace = torep)&(1 = curNode)&(2 = curCache)&(1 = node.cache.addr[2]))) : invalid;
            ((cur_rule = c_RepAll12200)&((replace = reqrepall)&(node.cache.state[2] = dirty)&(2 = node.cache.addr[2]))) : invalid;
            ((cur_rule = c_RepAll12100)&((replace = reqrepall)&(node.cache.state[2] = dirty)&(1 = node.cache.addr[2]))) : invalid;
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : valid;
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : valid;
            ((cur_rule = c_NLCW12220)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : dirty;
            ((cur_rule = c_NLCW12120)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : dirty;
            ((cur_rule = c_NLCW12210)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : dirty;
            ((cur_rule = c_NLCW12110)&((replace = non)&(node.hasLock[1] = false)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : dirty;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LCW12222)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW12122)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW12212)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW12112)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW12221)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW12121)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW12211)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW12111)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            TRUE : node.cache.state[2];
        esac;
    next(node.cache.state[3]) := 
        case
            ((cur_rule = c_Replace21200)&((replace = torep)&(2 = curNode)&(1 = curCache)&(2 = node.cache.addr[3]))) : invalid;
            ((cur_rule = c_Replace21100)&((replace = torep)&(2 = curNode)&(1 = curCache)&(1 = node.cache.addr[3]))) : invalid;
            ((cur_rule = c_RepAll21200)&((replace = reqrepall)&(node.cache.state[3] = dirty)&(2 = node.cache.addr[3]))) : invalid;
            ((cur_rule = c_RepAll21100)&((replace = reqrepall)&(node.cache.state[3] = dirty)&(1 = node.cache.addr[3]))) : invalid;
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : valid;
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : valid;
            ((cur_rule = c_NLCW21220)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : dirty;
            ((cur_rule = c_NLCW21120)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : dirty;
            ((cur_rule = c_NLCW21210)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : dirty;
            ((cur_rule = c_NLCW21110)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : dirty;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LCW21222)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW21122)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW21212)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW21112)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW21221)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW21121)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW21211)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW21111)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            TRUE : node.cache.state[3];
        esac;
    next(node.cache.state[4]) := 
        case
            ((cur_rule = c_Replace22200)&((replace = torep)&(2 = curNode)&(2 = curCache)&(2 = node.cache.addr[4]))) : invalid;
            ((cur_rule = c_Replace22100)&((replace = torep)&(2 = curNode)&(2 = curCache)&(1 = node.cache.addr[4]))) : invalid;
            ((cur_rule = c_RepAll22200)&((replace = reqrepall)&(node.cache.state[4] = dirty)&(2 = node.cache.addr[4]))) : invalid;
            ((cur_rule = c_RepAll22100)&((replace = reqrepall)&(node.cache.state[4] = dirty)&(1 = node.cache.addr[4]))) : invalid;
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : valid;
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : valid;
            ((cur_rule = c_NLCW22220)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : dirty;
            ((cur_rule = c_NLCW22120)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : dirty;
            ((cur_rule = c_NLCW22210)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : dirty;
            ((cur_rule = c_NLCW22110)&((replace = non)&(node.hasLock[2] = false)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : dirty;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LCW22222)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW22122)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW22212)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 2))&((lock.inProtection[2] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW22112)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 2))&((lock.inProtection[1] = true) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW22221)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW22121)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW22211)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2)&(((lock.inProtection[4] = true) -> (2 = 1))&((lock.inProtection[2] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW22111)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1)&(((lock.inProtection[3] = true) -> (2 = 1))&((lock.inProtection[1] = true) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            TRUE : node.cache.state[4];
        esac;
    next(node.firstRead[1]) := 
        case
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : false;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : false;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : false;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : false;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : false;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : false;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : false;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : false;
            ((cur_rule = c_Acquire12000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[2] = false))) : true;
            ((cur_rule = c_Acquire11000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[1] = false))) : true;
            TRUE : node.firstRead[1];
        esac;
    next(node.firstRead[2]) := 
        case
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : false;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : false;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : false;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : false;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : false;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : false;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : false;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : false;
            ((cur_rule = c_Acquire12000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[2] = false))) : true;
            ((cur_rule = c_Acquire11000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[1] = false))) : true;
            TRUE : node.firstRead[2];
        esac;
    next(node.firstRead[3]) := 
        case
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : false;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : false;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : false;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : false;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : false;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : false;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : false;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : false;
            ((cur_rule = c_Acquire22000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[2] = false))) : true;
            ((cur_rule = c_Acquire21000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[1] = false))) : true;
            TRUE : node.firstRead[3];
        esac;
    next(node.firstRead[4]) := 
        case
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : false;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : false;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : false;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : false;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : false;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : false;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : false;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : false;
            ((cur_rule = c_Acquire22000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[2] = false))) : true;
            ((cur_rule = c_Acquire21000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[1] = false))) : true;
            TRUE : node.firstRead[4];
        esac;
    next(node.hasLock[1]) := 
        case
            ((cur_rule = c_Release12000)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1))) : false;
            ((cur_rule = c_Release11000)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1))) : false;
            ((cur_rule = c_Acquire12000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[2] = false))) : true;
            ((cur_rule = c_Acquire11000)&((replace = non)&(node.hasLock[1] = false)&(lock.beUsed[1] = false))) : true;
            TRUE : node.hasLock[1];
        esac;
    next(node.hasLock[2]) := 
        case
            ((cur_rule = c_Release22000)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2))) : false;
            ((cur_rule = c_Release21000)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2))) : false;
            ((cur_rule = c_Acquire22000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[2] = false))) : true;
            ((cur_rule = c_Acquire21000)&((replace = non)&(node.hasLock[2] = false)&(lock.beUsed[1] = false))) : true;
            TRUE : node.hasLock[2];
        esac;
    next(repRule) := 
        case
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : nlncw;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : nlncw;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : nlncw;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : nlncw;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : nlncw;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : nlncw;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : nlncw;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : nlncw;
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : none;
            ((cur_rule = c_NLNCRR22000)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : nlncr;
            ((cur_rule = c_NLNCRR12000)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : nlncr;
            ((cur_rule = c_NLNCRR21000)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : nlncr;
            ((cur_rule = c_NLNCRR11000)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : nlncr;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : none;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : none;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : none;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : none;
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : none;
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : none;
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : none;
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : none;
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : lncnfr;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : lncfr;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : lncfr;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : lncfr;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : lncfr;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : lncfr;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : lncfr;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : lncfr;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : lncfr;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : lcfr;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : lcfr;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : lcfr;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : lcfr;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : lcfr;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : lcfr;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : lcfr;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : lcfr;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : lcfr;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : lcfr;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : lcfr;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : lcfr;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : lcfr;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : lcfr;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : lcfr;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : lcfr;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            TRUE : repRule;
        esac;
    next(replace) := 
        case
            ((cur_rule = c_Replace22200)&((replace = torep)&(2 = curNode)&(2 = curCache)&(2 = node.cache.addr[4]))) : done;
            ((cur_rule = c_Replace12200)&((replace = torep)&(1 = curNode)&(2 = curCache)&(2 = node.cache.addr[2]))) : done;
            ((cur_rule = c_Replace21200)&((replace = torep)&(2 = curNode)&(1 = curCache)&(2 = node.cache.addr[3]))) : done;
            ((cur_rule = c_Replace11200)&((replace = torep)&(1 = curNode)&(1 = curCache)&(2 = node.cache.addr[1]))) : done;
            ((cur_rule = c_Replace22100)&((replace = torep)&(2 = curNode)&(2 = curCache)&(1 = node.cache.addr[4]))) : done;
            ((cur_rule = c_Replace12100)&((replace = torep)&(1 = curNode)&(2 = curCache)&(1 = node.cache.addr[2]))) : done;
            ((cur_rule = c_Replace21100)&((replace = torep)&(2 = curNode)&(1 = curCache)&(1 = node.cache.addr[3]))) : done;
            ((cur_rule = c_Replace11100)&((replace = torep)&(1 = curNode)&(1 = curCache)&(1 = node.cache.addr[1]))) : done;
            ((cur_rule = c_RepAllDone00000)&((replace = reqrepall)&(((!(node.cache.state[4] = dirty))&(!(node.cache.state[3] = dirty)))&((!(node.cache.state[2] = dirty))&(!(node.cache.state[1] = dirty)))))) : repalldone;
            ((cur_rule = c_RNI20000)&((replace = require)&(2 = curNode)&((!(node.cache.state[4] = invalid))&(!(node.cache.state[3] = invalid))))) : random;
            ((cur_rule = c_RNI10000)&((replace = require)&(1 = curNode)&((!(node.cache.state[2] = invalid))&(!(node.cache.state[1] = invalid))))) : random;
            ((cur_rule = c_RI20000)&((replace = require)&(2 = curNode)&(!((!(node.cache.state[4] = invalid))&(!(node.cache.state[3] = invalid)))))) : randinv;
            ((cur_rule = c_RI10000)&((replace = require)&(1 = curNode)&(!((!(node.cache.state[2] = invalid))&(!(node.cache.state[1] = invalid)))))) : randinv;
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : require;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : require;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : require;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : require;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : require;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2))))&((lock.inProtection[4] = false)&(lock.inProtection[2] = false)))) : require;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : require;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1))))&((lock.inProtection[3] = false)&(lock.inProtection[1] = false)))) : require;
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : non;
            ((cur_rule = c_NLNCRR22000)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : require;
            ((cur_rule = c_NLNCRR12000)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : require;
            ((cur_rule = c_NLNCRR21000)&((replace = non)&(node.hasLock[2] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : require;
            ((cur_rule = c_NLNCRR11000)&((replace = non)&(node.hasLock[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : require;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : non;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : non;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : non;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : non;
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : non;
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : non;
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : non;
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : non;
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : require;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : require;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : require;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : require;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : require;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : require;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = false)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : require;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = false)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : require;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 2)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 2)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 2)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 2)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(((node.cache.state[4] = invalid)|(!(node.cache.addr[4] = 1)))&((node.cache.state[3] = invalid)|(!(node.cache.addr[3] = 1)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(((node.cache.state[2] = invalid)|(!(node.cache.addr[2] = 1)))&((node.cache.state[1] = invalid)|(!(node.cache.addr[1] = 1)))))) : reqrepall;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRAD00000)&((replace = repalldone)&(repRule = lncfr))) : require;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[2] = true)&(lock.owner[2] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[4] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[2] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[4] = invalid))&(node.cache.addr[4] = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[2] = invalid))&(node.cache.addr[2] = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(node.hasLock[2] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 2)&(node.firstRead[3] = true)&(!(node.cache.state[3] = invalid))&(node.cache.addr[3] = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(node.hasLock[1] = true)&(lock.beUsed[1] = true)&(lock.owner[1] = 1)&(node.firstRead[1] = true)&(!(node.cache.state[1] = invalid))&(node.cache.addr[1] = 1))) : reqrepall;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRAD00000)&((replace = repalldone)&(repRule = lcfr))) : designated;
            ((cur_rule = c_DCND22000)&((replace = designated)&(2 = curNode)&(2 = curCache)&(!(node.cache.state[4] = dirty)))) : done;
            ((cur_rule = c_DCND12000)&((replace = designated)&(1 = curNode)&(2 = curCache)&(!(node.cache.state[2] = dirty)))) : done;
            ((cur_rule = c_DCND21000)&((replace = designated)&(2 = curNode)&(1 = curCache)&(!(node.cache.state[3] = dirty)))) : done;
            ((cur_rule = c_DCND11000)&((replace = designated)&(1 = curNode)&(1 = curCache)&(!(node.cache.state[1] = dirty)))) : done;
            ((cur_rule = c_DCD22000)&((replace = designated)&(2 = curNode)&(2 = curCache)&(node.cache.state[4] = dirty))) : torep;
            ((cur_rule = c_DCD12000)&((replace = designated)&(1 = curNode)&(2 = curCache)&(node.cache.state[2] = dirty))) : torep;
            ((cur_rule = c_DCD21000)&((replace = designated)&(2 = curNode)&(1 = curCache)&(node.cache.state[3] = dirty))) : torep;
            ((cur_rule = c_DCD11000)&((replace = designated)&(1 = curNode)&(1 = curCache)&(node.cache.state[1] = dirty))) : torep;
            ((cur_rule = c_CRIC22000)&((replace = randinv)&(2 = curNode)&(node.cache.state[4] = invalid))) : done;
            ((cur_rule = c_CRIC12000)&((replace = randinv)&(1 = curNode)&(node.cache.state[2] = invalid))) : done;
            ((cur_rule = c_CRIC21000)&((replace = randinv)&(2 = curNode)&(node.cache.state[3] = invalid))) : done;
            ((cur_rule = c_CRIC11000)&((replace = randinv)&(1 = curNode)&(node.cache.state[1] = invalid))) : done;
            ((cur_rule = c_CRC20000)&(replace = random)) : designated;
            ((cur_rule = c_CRC10000)&(replace = random)) : designated;
            TRUE : replace;
        esac;
    init(cur_rule) := c_Acquire11000;
    next(cur_rule) :=
        case
            (cur_rule = c_Acquire11000) : c_Acquire21000;
            (cur_rule = c_Acquire21000) : c_Acquire12000;
            (cur_rule = c_Acquire12000) : c_Acquire22000;
            (cur_rule = c_Acquire22000) : c_CRC10000;
            (cur_rule = c_CRC10000) : c_CRC20000;
            (cur_rule = c_CRC20000) : c_CRIC11000;
            (cur_rule = c_CRIC11000) : c_CRIC21000;
            (cur_rule = c_CRIC21000) : c_CRIC12000;
            (cur_rule = c_CRIC12000) : c_CRIC22000;
            (cur_rule = c_CRIC22000) : c_DCD11000;
            (cur_rule = c_DCD11000) : c_DCD21000;
            (cur_rule = c_DCD21000) : c_DCD12000;
            (cur_rule = c_DCD12000) : c_DCD22000;
            (cur_rule = c_DCD22000) : c_DCND11000;
            (cur_rule = c_DCND11000) : c_DCND21000;
            (cur_rule = c_DCND21000) : c_DCND12000;
            (cur_rule = c_DCND12000) : c_DCND22000;
            (cur_rule = c_DCND22000) : c_LCFRAD00000;
            (cur_rule = c_LCFRAD00000) : c_LCFRD11110;
            (cur_rule = c_LCFRD11110) : c_LCFRD21110;
            (cur_rule = c_LCFRD21110) : c_LCFRD12110;
            (cur_rule = c_LCFRD12110) : c_LCFRD22110;
            (cur_rule = c_LCFRD22110) : c_LCFRD11210;
            (cur_rule = c_LCFRD11210) : c_LCFRD21210;
            (cur_rule = c_LCFRD21210) : c_LCFRD12210;
            (cur_rule = c_LCFRD12210) : c_LCFRD22210;
            (cur_rule = c_LCFRD22210) : c_LCFRD11120;
            (cur_rule = c_LCFRD11120) : c_LCFRD21120;
            (cur_rule = c_LCFRD21120) : c_LCFRD12120;
            (cur_rule = c_LCFRD12120) : c_LCFRD22120;
            (cur_rule = c_LCFRD22120) : c_LCFRD11220;
            (cur_rule = c_LCFRD11220) : c_LCFRD21220;
            (cur_rule = c_LCFRD21220) : c_LCFRD12220;
            (cur_rule = c_LCFRD12220) : c_LCFRD22220;
            (cur_rule = c_LCFRD22220) : c_LCFRRA11110;
            (cur_rule = c_LCFRRA11110) : c_LCFRRA21110;
            (cur_rule = c_LCFRRA21110) : c_LCFRRA12110;
            (cur_rule = c_LCFRRA12110) : c_LCFRRA22110;
            (cur_rule = c_LCFRRA22110) : c_LCFRRA11210;
            (cur_rule = c_LCFRRA11210) : c_LCFRRA21210;
            (cur_rule = c_LCFRRA21210) : c_LCFRRA12210;
            (cur_rule = c_LCFRRA12210) : c_LCFRRA22210;
            (cur_rule = c_LCFRRA22210) : c_LCFRRA11120;
            (cur_rule = c_LCFRRA11120) : c_LCFRRA21120;
            (cur_rule = c_LCFRRA21120) : c_LCFRRA12120;
            (cur_rule = c_LCFRRA12120) : c_LCFRRA22120;
            (cur_rule = c_LCFRRA22120) : c_LCFRRA11220;
            (cur_rule = c_LCFRRA11220) : c_LCFRRA21220;
            (cur_rule = c_LCFRRA21220) : c_LCFRRA12220;
            (cur_rule = c_LCFRRA12220) : c_LCFRRA22220;
            (cur_rule = c_LCFRRA22220) : c_LCW11111;
            (cur_rule = c_LCW11111) : c_LCW21111;
            (cur_rule = c_LCW21111) : c_LCW12111;
            (cur_rule = c_LCW12111) : c_LCW22111;
            (cur_rule = c_LCW22111) : c_LCW11211;
            (cur_rule = c_LCW11211) : c_LCW21211;
            (cur_rule = c_LCW21211) : c_LCW12211;
            (cur_rule = c_LCW12211) : c_LCW22211;
            (cur_rule = c_LCW22211) : c_LCW11121;
            (cur_rule = c_LCW11121) : c_LCW21121;
            (cur_rule = c_LCW21121) : c_LCW12121;
            (cur_rule = c_LCW12121) : c_LCW22121;
            (cur_rule = c_LCW22121) : c_LCW11221;
            (cur_rule = c_LCW11221) : c_LCW21221;
            (cur_rule = c_LCW21221) : c_LCW12221;
            (cur_rule = c_LCW12221) : c_LCW22221;
            (cur_rule = c_LCW22221) : c_LCW11112;
            (cur_rule = c_LCW11112) : c_LCW21112;
            (cur_rule = c_LCW21112) : c_LCW12112;
            (cur_rule = c_LCW12112) : c_LCW22112;
            (cur_rule = c_LCW22112) : c_LCW11212;
            (cur_rule = c_LCW11212) : c_LCW21212;
            (cur_rule = c_LCW21212) : c_LCW12212;
            (cur_rule = c_LCW12212) : c_LCW22212;
            (cur_rule = c_LCW22212) : c_LCW11122;
            (cur_rule = c_LCW11122) : c_LCW21122;
            (cur_rule = c_LCW21122) : c_LCW12122;
            (cur_rule = c_LCW12122) : c_LCW22122;
            (cur_rule = c_LCW22122) : c_LCW11222;
            (cur_rule = c_LCW11222) : c_LCW21222;
            (cur_rule = c_LCW21222) : c_LCW12222;
            (cur_rule = c_LCW12222) : c_LCW22222;
            (cur_rule = c_LCW22222) : c_LNCFRAD00000;
            (cur_rule = c_LNCFRAD00000) : c_LNCFRD11110;
            (cur_rule = c_LNCFRD11110) : c_LNCFRD21110;
            (cur_rule = c_LNCFRD21110) : c_LNCFRD12110;
            (cur_rule = c_LNCFRD12110) : c_LNCFRD22110;
            (cur_rule = c_LNCFRD22110) : c_LNCFRD11210;
            (cur_rule = c_LNCFRD11210) : c_LNCFRD21210;
            (cur_rule = c_LNCFRD21210) : c_LNCFRD12210;
            (cur_rule = c_LNCFRD12210) : c_LNCFRD22210;
            (cur_rule = c_LNCFRD22210) : c_LNCFRD11120;
            (cur_rule = c_LNCFRD11120) : c_LNCFRD21120;
            (cur_rule = c_LNCFRD21120) : c_LNCFRD12120;
            (cur_rule = c_LNCFRD12120) : c_LNCFRD22120;
            (cur_rule = c_LNCFRD22120) : c_LNCFRD11220;
            (cur_rule = c_LNCFRD11220) : c_LNCFRD21220;
            (cur_rule = c_LNCFRD21220) : c_LNCFRD12220;
            (cur_rule = c_LNCFRD12220) : c_LNCFRD22220;
            (cur_rule = c_LNCFRD22220) : c_LNCFRRA11100;
            (cur_rule = c_LNCFRRA11100) : c_LNCFRRA21100;
            (cur_rule = c_LNCFRRA21100) : c_LNCFRRA12100;
            (cur_rule = c_LNCFRRA12100) : c_LNCFRRA22100;
            (cur_rule = c_LNCFRRA22100) : c_LNCFRRA11200;
            (cur_rule = c_LNCFRRA11200) : c_LNCFRRA21200;
            (cur_rule = c_LNCFRRA21200) : c_LNCFRRA12200;
            (cur_rule = c_LNCFRRA12200) : c_LNCFRRA22200;
            (cur_rule = c_LNCFRRA22200) : c_LNCNFRD11110;
            (cur_rule = c_LNCNFRD11110) : c_LNCNFRD21110;
            (cur_rule = c_LNCNFRD21110) : c_LNCNFRD12110;
            (cur_rule = c_LNCNFRD12110) : c_LNCNFRD22110;
            (cur_rule = c_LNCNFRD22110) : c_LNCNFRD11210;
            (cur_rule = c_LNCNFRD11210) : c_LNCNFRD21210;
            (cur_rule = c_LNCNFRD21210) : c_LNCNFRD12210;
            (cur_rule = c_LNCNFRD12210) : c_LNCNFRD22210;
            (cur_rule = c_LNCNFRD22210) : c_LNCNFRD11120;
            (cur_rule = c_LNCNFRD11120) : c_LNCNFRD21120;
            (cur_rule = c_LNCNFRD21120) : c_LNCNFRD12120;
            (cur_rule = c_LNCNFRD12120) : c_LNCNFRD22120;
            (cur_rule = c_LNCNFRD22120) : c_LNCNFRD11220;
            (cur_rule = c_LNCNFRD11220) : c_LNCNFRD21220;
            (cur_rule = c_LNCNFRD21220) : c_LNCNFRD12220;
            (cur_rule = c_LNCNFRD12220) : c_LNCNFRD22220;
            (cur_rule = c_LNCNFRD22220) : c_LNCNFRR11100;
            (cur_rule = c_LNCNFRR11100) : c_LNCNFRR21100;
            (cur_rule = c_LNCNFRR21100) : c_LNCNFRR12100;
            (cur_rule = c_LNCNFRR12100) : c_LNCNFRR22100;
            (cur_rule = c_LNCNFRR22100) : c_LNCNFRR11200;
            (cur_rule = c_LNCNFRR11200) : c_LNCNFRR21200;
            (cur_rule = c_LNCNFRR21200) : c_LNCNFRR12200;
            (cur_rule = c_LNCNFRR12200) : c_LNCNFRR22200;
            (cur_rule = c_LNCNFRR22200) : c_LNCW11110;
            (cur_rule = c_LNCW11110) : c_LNCW21110;
            (cur_rule = c_LNCW21110) : c_LNCW12110;
            (cur_rule = c_LNCW12110) : c_LNCW22110;
            (cur_rule = c_LNCW22110) : c_LNCW11210;
            (cur_rule = c_LNCW11210) : c_LNCW21210;
            (cur_rule = c_LNCW21210) : c_LNCW12210;
            (cur_rule = c_LNCW12210) : c_LNCW22210;
            (cur_rule = c_LNCW22210) : c_LNCW11120;
            (cur_rule = c_LNCW11120) : c_LNCW21120;
            (cur_rule = c_LNCW21120) : c_LNCW12120;
            (cur_rule = c_LNCW12120) : c_LNCW22120;
            (cur_rule = c_LNCW22120) : c_LNCW11220;
            (cur_rule = c_LNCW11220) : c_LNCW21220;
            (cur_rule = c_LNCW21220) : c_LNCW12220;
            (cur_rule = c_LNCW12220) : c_LNCW22220;
            (cur_rule = c_LNCW22220) : c_NLCW11110;
            (cur_rule = c_NLCW11110) : c_NLCW21110;
            (cur_rule = c_NLCW21110) : c_NLCW12110;
            (cur_rule = c_NLCW12110) : c_NLCW22110;
            (cur_rule = c_NLCW22110) : c_NLCW11210;
            (cur_rule = c_NLCW11210) : c_NLCW21210;
            (cur_rule = c_NLCW21210) : c_NLCW12210;
            (cur_rule = c_NLCW12210) : c_NLCW22210;
            (cur_rule = c_NLCW22210) : c_NLCW11120;
            (cur_rule = c_NLCW11120) : c_NLCW21120;
            (cur_rule = c_NLCW21120) : c_NLCW12120;
            (cur_rule = c_NLCW12120) : c_NLCW22120;
            (cur_rule = c_NLCW22120) : c_NLCW11220;
            (cur_rule = c_NLCW11220) : c_NLCW21220;
            (cur_rule = c_NLCW21220) : c_NLCW12220;
            (cur_rule = c_NLCW12220) : c_NLCW22220;
            (cur_rule = c_NLCW22220) : c_NLNCRD11100;
            (cur_rule = c_NLNCRD11100) : c_NLNCRD21100;
            (cur_rule = c_NLNCRD21100) : c_NLNCRD12100;
            (cur_rule = c_NLNCRD12100) : c_NLNCRD22100;
            (cur_rule = c_NLNCRD22100) : c_NLNCRD11200;
            (cur_rule = c_NLNCRD11200) : c_NLNCRD21200;
            (cur_rule = c_NLNCRD21200) : c_NLNCRD12200;
            (cur_rule = c_NLNCRD12200) : c_NLNCRD22200;
            (cur_rule = c_NLNCRD22200) : c_NLNCRR11000;
            (cur_rule = c_NLNCRR11000) : c_NLNCRR21000;
            (cur_rule = c_NLNCRR21000) : c_NLNCRR12000;
            (cur_rule = c_NLNCRR12000) : c_NLNCRR22000;
            (cur_rule = c_NLNCRR22000) : c_NLNCWD11110;
            (cur_rule = c_NLNCWD11110) : c_NLNCWD21110;
            (cur_rule = c_NLNCWD21110) : c_NLNCWD12110;
            (cur_rule = c_NLNCWD12110) : c_NLNCWD22110;
            (cur_rule = c_NLNCWD22110) : c_NLNCWD11210;
            (cur_rule = c_NLNCWD11210) : c_NLNCWD21210;
            (cur_rule = c_NLNCWD21210) : c_NLNCWD12210;
            (cur_rule = c_NLNCWD12210) : c_NLNCWD22210;
            (cur_rule = c_NLNCWD22210) : c_NLNCWD11120;
            (cur_rule = c_NLNCWD11120) : c_NLNCWD21120;
            (cur_rule = c_NLNCWD21120) : c_NLNCWD12120;
            (cur_rule = c_NLNCWD12120) : c_NLNCWD22120;
            (cur_rule = c_NLNCWD22120) : c_NLNCWD11220;
            (cur_rule = c_NLNCWD11220) : c_NLNCWD21220;
            (cur_rule = c_NLNCWD21220) : c_NLNCWD12220;
            (cur_rule = c_NLNCWD12220) : c_NLNCWD22220;
            (cur_rule = c_NLNCWD22220) : c_NLNCWR11100;
            (cur_rule = c_NLNCWR11100) : c_NLNCWR21100;
            (cur_rule = c_NLNCWR21100) : c_NLNCWR12100;
            (cur_rule = c_NLNCWR12100) : c_NLNCWR22100;
            (cur_rule = c_NLNCWR22100) : c_NLNCWR11200;
            (cur_rule = c_NLNCWR11200) : c_NLNCWR21200;
            (cur_rule = c_NLNCWR21200) : c_NLNCWR12200;
            (cur_rule = c_NLNCWR12200) : c_NLNCWR22200;
            (cur_rule = c_NLNCWR22200) : c_RI10000;
            (cur_rule = c_RI10000) : c_RI20000;
            (cur_rule = c_RI20000) : c_RNI10000;
            (cur_rule = c_RNI10000) : c_RNI20000;
            (cur_rule = c_RNI20000) : c_Release11000;
            (cur_rule = c_Release11000) : c_Release21000;
            (cur_rule = c_Release21000) : c_Release12000;
            (cur_rule = c_Release12000) : c_Release22000;
            (cur_rule = c_Release22000) : c_RepAll11100;
            (cur_rule = c_RepAll11100) : c_RepAll21100;
            (cur_rule = c_RepAll21100) : c_RepAll12100;
            (cur_rule = c_RepAll12100) : c_RepAll22100;
            (cur_rule = c_RepAll22100) : c_RepAll11200;
            (cur_rule = c_RepAll11200) : c_RepAll21200;
            (cur_rule = c_RepAll21200) : c_RepAll12200;
            (cur_rule = c_RepAll12200) : c_RepAll22200;
            (cur_rule = c_RepAll22200) : c_RepAllDone00000;
            (cur_rule = c_RepAllDone00000) : c_Replace11100;
            (cur_rule = c_Replace11100) : c_Replace21100;
            (cur_rule = c_Replace21100) : c_Replace12100;
            (cur_rule = c_Replace12100) : c_Replace22100;
            (cur_rule = c_Replace22100) : c_Replace11200;
            (cur_rule = c_Replace11200) : c_Replace21200;
            (cur_rule = c_Replace21200) : c_Replace12200;
            (cur_rule = c_Replace12200) : c_Replace22200;
            (cur_rule = c_Replace22200) : c_Acquire11000;
        esac;

-- c_Coherence11100 --
SPEC
    AG (((replace = non)&(node.hasLock[1] = true)&(node.firstRead[1] = false)&(node.cache.state[1] = valid)&(node.cache.addr[1] = 1)) -> (node.cache.data[1] = memory.data[1]))

-- c_Coherence21100 --
SPEC
    AG (((replace = non)&(node.hasLock[2] = true)&(node.firstRead[3] = false)&(node.cache.state[3] = valid)&(node.cache.addr[3] = 1)) -> (node.cache.data[3] = memory.data[1]))

-- c_Coherence12100 --
SPEC
    AG (((replace = non)&(node.hasLock[1] = true)&(node.firstRead[1] = false)&(node.cache.state[2] = valid)&(node.cache.addr[2] = 1)) -> (node.cache.data[2] = memory.data[1]))

-- c_Coherence22100 --
SPEC
    AG (((replace = non)&(node.hasLock[2] = true)&(node.firstRead[3] = false)&(node.cache.state[4] = valid)&(node.cache.addr[4] = 1)) -> (node.cache.data[4] = memory.data[1]))

-- c_Coherence11200 --
SPEC
    AG (((replace = non)&(node.hasLock[1] = true)&(node.firstRead[2] = false)&(node.cache.state[1] = valid)&(node.cache.addr[1] = 2)) -> (node.cache.data[1] = memory.data[2]))

-- c_Coherence21200 --
SPEC
    AG (((replace = non)&(node.hasLock[2] = true)&(node.firstRead[4] = false)&(node.cache.state[3] = valid)&(node.cache.addr[3] = 2)) -> (node.cache.data[3] = memory.data[2]))

-- c_Coherence12200 --
SPEC
    AG (((replace = non)&(node.hasLock[1] = true)&(node.firstRead[2] = false)&(node.cache.state[2] = valid)&(node.cache.addr[2] = 2)) -> (node.cache.data[2] = memory.data[2]))

-- c_Coherence22200 --
SPEC
    AG (((replace = non)&(node.hasLock[2] = true)&(node.firstRead[4] = false)&(node.cache.state[4] = valid)&(node.cache.addr[4] = 2)) -> (node.cache.data[4] = memory.data[2]))

-- c_DeadlockFree10000 --
SPEC
    AG (((replace = non)&(node.hasLock[1] = true)) -> ((!(((lock.beUsed[2] = false)|(!(lock.owner[2] = 1)))&((lock.beUsed[1] = false)|(!(lock.owner[1] = 1)))))&((((2 = 2)|(lock.beUsed[2] = false)|(lock.beUsed[2] = false)|(!(lock.owner[2] = 1))|(!(lock.owner[2] = 1)))&((2 = 1)|(lock.beUsed[2] = false)|(lock.beUsed[1] = false)|(!(lock.owner[2] = 1))|(!(lock.owner[1] = 1))))&(((1 = 2)|(lock.beUsed[1] = false)|(lock.beUsed[2] = false)|(!(lock.owner[1] = 1))|(!(lock.owner[2] = 1)))&((1 = 1)|(lock.beUsed[1] = false)|(lock.beUsed[1] = false)|(!(lock.owner[1] = 1))|(!(lock.owner[1] = 1)))))))

-- c_DeadlockFree20000 --
SPEC
    AG (((replace = non)&(node.hasLock[2] = true)) -> ((!(((lock.beUsed[2] = false)|(!(lock.owner[2] = 2)))&((lock.beUsed[1] = false)|(!(lock.owner[1] = 2)))))&((((2 = 2)|(lock.beUsed[2] = false)|(lock.beUsed[2] = false)|(!(lock.owner[2] = 2))|(!(lock.owner[2] = 2)))&((2 = 1)|(lock.beUsed[2] = false)|(lock.beUsed[1] = false)|(!(lock.owner[2] = 2))|(!(lock.owner[1] = 2))))&(((1 = 2)|(lock.beUsed[1] = false)|(lock.beUsed[2] = false)|(!(lock.owner[1] = 2))|(!(lock.owner[2] = 2)))&((1 = 1)|(lock.beUsed[1] = false)|(lock.beUsed[1] = false)|(!(lock.owner[1] = 2))|(!(lock.owner[1] = 2)))))))

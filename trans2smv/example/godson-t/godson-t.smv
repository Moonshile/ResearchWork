
-- This program is generated by trans2smv from its forte version. --

MODULE main

VAR
    Node[1].lock.beUsed : boolean;
    Node[1].lock.inProtection : boolean;
    Node[1].lock.owner : {1, 2};
    Node[1].memory.data : {1, 2};
    Node[1].node.cache.addr : {1, 2};
    Node[1].node.cache.data : {1, 2};
    Node[1].node.cache.state : {invalid, dirty, valid};
    Node[1].node.firstRead : boolean;
    Node[1].node.hasLock : boolean;
    Node[2].lock.beUsed : boolean;
    Node[2].lock.inProtection : boolean;
    Node[2].lock.owner : {1, 2};
    Node[2].memory.data : {1, 2};
    Node[2].node.cache.addr : {1, 2};
    Node[2].node.cache.data : {1, 2};
    Node[2].node.cache.state : {invalid, dirty, valid};
    Node[2].node.firstRead : boolean;
    Node[2].node.hasLock : boolean;
    Node[3].lock.inProtection : boolean;
    Node[3].node.cache.addr : {1, 2};
    Node[3].node.cache.data : {1, 2};
    Node[3].node.cache.state : {invalid, dirty, valid};
    Node[3].node.firstRead : boolean;
    Node[4].lock.inProtection : boolean;
    Node[4].node.cache.addr : {1, 2};
    Node[4].node.cache.data : {1, 2};
    Node[4].node.cache.state : {invalid, dirty, valid};
    Node[4].node.firstRead : boolean;
    curCache : {1, 2};
    curData : {1, 2};
    curLock : {1, 2};
    curMemory : {1, 2};
    curNode : {1, 2};
    repRule : {none, nlncr, nlncw, lncfr, lcfr, lncnfr};
    replace : {non, require, reqrepall, random, randinv, designated, torep, done, repalldone};
    cur_rule : {c_Acquire11000, c_Acquire21000, c_Acquire12000, c_Acquire22000, c_CRC10000, c_CRC20000, c_CRIC11000, c_CRIC21000, c_CRIC12000, c_CRIC22000, c_DCD11000, c_DCD21000, c_DCD12000, c_DCD22000, c_DCND11000, c_DCND21000, c_DCND12000, c_DCND22000, c_LCFRAD00000, c_LCFRD11110, c_LCFRD21110, c_LCFRD12110, c_LCFRD22110, c_LCFRD11210, c_LCFRD21210, c_LCFRD12210, c_LCFRD22210, c_LCFRD11120, c_LCFRD21120, c_LCFRD12120, c_LCFRD22120, c_LCFRD11220, c_LCFRD21220, c_LCFRD12220, c_LCFRD22220, c_LCFRRA11110, c_LCFRRA21110, c_LCFRRA12110, c_LCFRRA22110, c_LCFRRA11210, c_LCFRRA21210, c_LCFRRA12210, c_LCFRRA22210, c_LCFRRA11120, c_LCFRRA21120, c_LCFRRA12120, c_LCFRRA22120, c_LCFRRA11220, c_LCFRRA21220, c_LCFRRA12220, c_LCFRRA22220, c_LCW11111, c_LCW21111, c_LCW12111, c_LCW22111, c_LCW11211, c_LCW21211, c_LCW12211, c_LCW22211, c_LCW11121, c_LCW21121, c_LCW12121, c_LCW22121, c_LCW11221, c_LCW21221, c_LCW12221, c_LCW22221, c_LCW11112, c_LCW21112, c_LCW12112, c_LCW22112, c_LCW11212, c_LCW21212, c_LCW12212, c_LCW22212, c_LCW11122, c_LCW21122, c_LCW12122, c_LCW22122, c_LCW11222, c_LCW21222, c_LCW12222, c_LCW22222, c_LNCFRAD00000, c_LNCFRD11110, c_LNCFRD21110, c_LNCFRD12110, c_LNCFRD22110, c_LNCFRD11210, c_LNCFRD21210, c_LNCFRD12210, c_LNCFRD22210, c_LNCFRD11120, c_LNCFRD21120, c_LNCFRD12120, c_LNCFRD22120, c_LNCFRD11220, c_LNCFRD21220, c_LNCFRD12220, c_LNCFRD22220, c_LNCFRRA11100, c_LNCFRRA21100, c_LNCFRRA12100, c_LNCFRRA22100, c_LNCFRRA11200, c_LNCFRRA21200, c_LNCFRRA12200, c_LNCFRRA22200, c_LNCNFRD11110, c_LNCNFRD21110, c_LNCNFRD12110, c_LNCNFRD22110, c_LNCNFRD11210, c_LNCNFRD21210, c_LNCNFRD12210, c_LNCNFRD22210, c_LNCNFRD11120, c_LNCNFRD21120, c_LNCNFRD12120, c_LNCNFRD22120, c_LNCNFRD11220, c_LNCNFRD21220, c_LNCNFRD12220, c_LNCNFRD22220, c_LNCNFRR11100, c_LNCNFRR21100, c_LNCNFRR12100, c_LNCNFRR22100, c_LNCNFRR11200, c_LNCNFRR21200, c_LNCNFRR12200, c_LNCNFRR22200, c_LNCW11110, c_LNCW21110, c_LNCW12110, c_LNCW22110, c_LNCW11210, c_LNCW21210, c_LNCW12210, c_LNCW22210, c_LNCW11120, c_LNCW21120, c_LNCW12120, c_LNCW22120, c_LNCW11220, c_LNCW21220, c_LNCW12220, c_LNCW22220, c_NLCW11110, c_NLCW21110, c_NLCW12110, c_NLCW22110, c_NLCW11210, c_NLCW21210, c_NLCW12210, c_NLCW22210, c_NLCW11120, c_NLCW21120, c_NLCW12120, c_NLCW22120, c_NLCW11220, c_NLCW21220, c_NLCW12220, c_NLCW22220, c_NLNCRD11100, c_NLNCRD21100, c_NLNCRD12100, c_NLNCRD22100, c_NLNCRD11200, c_NLNCRD21200, c_NLNCRD12200, c_NLNCRD22200, c_NLNCRR11000, c_NLNCRR21000, c_NLNCRR12000, c_NLNCRR22000, c_NLNCWD11110, c_NLNCWD21110, c_NLNCWD12110, c_NLNCWD22110, c_NLNCWD11210, c_NLNCWD21210, c_NLNCWD12210, c_NLNCWD22210, c_NLNCWD11120, c_NLNCWD21120, c_NLNCWD12120, c_NLNCWD22120, c_NLNCWD11220, c_NLNCWD21220, c_NLNCWD12220, c_NLNCWD22220, c_NLNCWR11100, c_NLNCWR21100, c_NLNCWR12100, c_NLNCWR22100, c_NLNCWR11200, c_NLNCWR21200, c_NLNCWR12200, c_NLNCWR22200, c_RI10000, c_RI20000, c_RNI10000, c_RNI20000, c_Release11000, c_Release21000, c_Release12000, c_Release22000, c_RepAll11100, c_RepAll21100, c_RepAll12100, c_RepAll22100, c_RepAll11200, c_RepAll21200, c_RepAll12200, c_RepAll22200, c_RepAllDone00000, c_Replace11100, c_Replace21100, c_Replace12100, c_Replace22100, c_Replace11200, c_Replace21200, c_Replace12200, c_Replace22200};

ASSIGN
    init(Node[1].lock.beUsed) := FALSE;
    init(Node[1].lock.inProtection) := FALSE;
    init(Node[1].memory.data) := 1;
    init(Node[1].node.cache.state) := invalid;
    init(Node[1].node.firstRead) := TRUE;
    init(Node[1].node.hasLock) := FALSE;
    init(Node[2].lock.beUsed) := FALSE;
    init(Node[2].lock.inProtection) := FALSE;
    init(Node[2].memory.data) := 1;
    init(Node[2].node.cache.state) := invalid;
    init(Node[2].node.firstRead) := TRUE;
    init(Node[2].node.hasLock) := FALSE;
    init(Node[3].lock.inProtection) := FALSE;
    init(Node[3].node.cache.state) := invalid;
    init(Node[3].node.firstRead) := TRUE;
    init(Node[4].lock.inProtection) := FALSE;
    init(Node[4].node.cache.state) := invalid;
    init(Node[4].node.firstRead) := TRUE;
    init(curCache) := 1;
    init(curData) := 1;
    init(curLock) := 1;
    init(curMemory) := 1;
    init(curNode) := 1;
    init(repRule) := none;
    init(replace) := non;
    next(Node[1].lock.beUsed) := 
        case
            ((cur_rule = c_Release21000)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2))) : FALSE;
            ((cur_rule = c_Release11000)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1))) : FALSE;
            ((cur_rule = c_Acquire21000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : TRUE;
            ((cur_rule = c_Acquire11000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : TRUE;
            TRUE : Node[1].lock.beUsed;
        esac;
    next(Node[1].lock.inProtection) := 
        case
            ((cur_rule = c_Release21000)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2))) : FALSE;
            ((cur_rule = c_Release11000)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1))) : FALSE;
            ((cur_rule = c_LNCW21210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LNCW11210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LNCW21110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LNCW11110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LCW22121)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW12121)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW21121)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW11121)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW22111)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW12111)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW21111)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW11111)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : TRUE;
            TRUE : Node[1].lock.inProtection;
        esac;
    next(Node[1].lock.owner) := 
        case
            ((cur_rule = c_Acquire21000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : 2;
            ((cur_rule = c_Acquire11000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : 1;
            TRUE : Node[1].lock.owner;
        esac;
    next(Node[1].memory.data) := 
        case
            ((cur_rule = c_Replace22100)&((replace = torep)&(2 = curNode)&(2 = curCache)&(1 = Node[4].node.cache.addr))) : Node[4].node.cache.data;
            ((cur_rule = c_Replace12100)&((replace = torep)&(1 = curNode)&(2 = curCache)&(1 = Node[2].node.cache.addr))) : Node[2].node.cache.data;
            ((cur_rule = c_Replace21100)&((replace = torep)&(2 = curNode)&(1 = curCache)&(1 = Node[3].node.cache.addr))) : Node[3].node.cache.data;
            ((cur_rule = c_Replace11100)&((replace = torep)&(1 = curNode)&(1 = curCache)&(1 = Node[1].node.cache.addr))) : Node[1].node.cache.data;
            ((cur_rule = c_RepAll22100)&((replace = reqrepall)&(Node[4].node.cache.state = dirty)&(1 = Node[4].node.cache.addr))) : Node[4].node.cache.data;
            ((cur_rule = c_RepAll12100)&((replace = reqrepall)&(Node[2].node.cache.state = dirty)&(1 = Node[2].node.cache.addr))) : Node[2].node.cache.data;
            ((cur_rule = c_RepAll21100)&((replace = reqrepall)&(Node[3].node.cache.state = dirty)&(1 = Node[3].node.cache.addr))) : Node[3].node.cache.data;
            ((cur_rule = c_RepAll11100)&((replace = reqrepall)&(Node[1].node.cache.state = dirty)&(1 = Node[1].node.cache.addr))) : Node[1].node.cache.data;
            ((cur_rule = c_LNCW21220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LNCW11220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LNCW21120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LNCW11120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LNCW21210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LNCW11210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LNCW21110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LNCW11110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW22122)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW12122)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW21122)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW11122)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW22112)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW12112)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW21112)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW11112)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW22121)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW12121)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW21121)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW11121)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW22111)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW12111)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW21111)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW11111)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            TRUE : Node[1].memory.data;
        esac;
    next(Node[1].node.cache.addr) := 
        case
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : 1;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : 2;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : 2;
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : 1;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : 1;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : 1;
            TRUE : Node[1].node.cache.addr;
        esac;
    next(Node[1].node.cache.data) := 
        case
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : Node[2].memory.data;
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : Node[1].memory.data;
            ((cur_rule = c_NLCW11220)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLCW11120)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLCW11210)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLCW11110)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            ((cur_rule = c_LCW11222)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW11122)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW11212)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW11112)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW11221)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW11121)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW11211)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW11111)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            TRUE : Node[1].node.cache.data;
        esac;
    next(Node[1].node.cache.state) := 
        case
            ((cur_rule = c_Replace11200)&((replace = torep)&(1 = curNode)&(1 = curCache)&(2 = Node[1].node.cache.addr))) : invalid;
            ((cur_rule = c_Replace11100)&((replace = torep)&(1 = curNode)&(1 = curCache)&(1 = Node[1].node.cache.addr))) : invalid;
            ((cur_rule = c_RepAll11200)&((replace = reqrepall)&(Node[1].node.cache.state = dirty)&(2 = Node[1].node.cache.addr))) : invalid;
            ((cur_rule = c_RepAll11100)&((replace = reqrepall)&(Node[1].node.cache.state = dirty)&(1 = Node[1].node.cache.addr))) : invalid;
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : valid;
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : valid;
            ((cur_rule = c_NLCW11220)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW11120)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW11210)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW11110)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LCW11222)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW11122)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW11212)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW11112)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW11221)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW11121)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW11211)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW11111)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            TRUE : Node[1].node.cache.state;
        esac;
    next(Node[1].node.firstRead) := 
        case
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : FALSE;
            ((cur_rule = c_Acquire12000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : TRUE;
            ((cur_rule = c_Acquire11000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : TRUE;
            TRUE : Node[1].node.firstRead;
        esac;
    next(Node[1].node.hasLock) := 
        case
            ((cur_rule = c_Release12000)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1))) : FALSE;
            ((cur_rule = c_Release11000)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1))) : FALSE;
            ((cur_rule = c_Acquire12000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : TRUE;
            ((cur_rule = c_Acquire11000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : TRUE;
            TRUE : Node[1].node.hasLock;
        esac;
    next(Node[2].lock.beUsed) := 
        case
            ((cur_rule = c_Release22000)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2))) : FALSE;
            ((cur_rule = c_Release12000)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1))) : FALSE;
            ((cur_rule = c_Acquire22000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : TRUE;
            ((cur_rule = c_Acquire12000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : TRUE;
            TRUE : Node[2].lock.beUsed;
        esac;
    next(Node[2].lock.inProtection) := 
        case
            ((cur_rule = c_Release21000)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2))) : FALSE;
            ((cur_rule = c_Release11000)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1))) : FALSE;
            ((cur_rule = c_LNCW22210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LNCW12210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LNCW22110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LNCW12110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LCW22221)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW12221)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW21221)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW11221)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW22211)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW12211)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW21211)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCW11211)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : TRUE;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : TRUE;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : TRUE;
            TRUE : Node[2].lock.inProtection;
        esac;
    next(Node[2].lock.owner) := 
        case
            ((cur_rule = c_Acquire22000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : 2;
            ((cur_rule = c_Acquire12000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : 1;
            TRUE : Node[2].lock.owner;
        esac;
    next(Node[2].memory.data) := 
        case
            ((cur_rule = c_Replace22200)&((replace = torep)&(2 = curNode)&(2 = curCache)&(2 = Node[4].node.cache.addr))) : Node[4].node.cache.data;
            ((cur_rule = c_Replace12200)&((replace = torep)&(1 = curNode)&(2 = curCache)&(2 = Node[2].node.cache.addr))) : Node[2].node.cache.data;
            ((cur_rule = c_Replace21200)&((replace = torep)&(2 = curNode)&(1 = curCache)&(2 = Node[3].node.cache.addr))) : Node[3].node.cache.data;
            ((cur_rule = c_Replace11200)&((replace = torep)&(1 = curNode)&(1 = curCache)&(2 = Node[1].node.cache.addr))) : Node[1].node.cache.data;
            ((cur_rule = c_RepAll22200)&((replace = reqrepall)&(Node[4].node.cache.state = dirty)&(2 = Node[4].node.cache.addr))) : Node[4].node.cache.data;
            ((cur_rule = c_RepAll12200)&((replace = reqrepall)&(Node[2].node.cache.state = dirty)&(2 = Node[2].node.cache.addr))) : Node[2].node.cache.data;
            ((cur_rule = c_RepAll21200)&((replace = reqrepall)&(Node[3].node.cache.state = dirty)&(2 = Node[3].node.cache.addr))) : Node[3].node.cache.data;
            ((cur_rule = c_RepAll11200)&((replace = reqrepall)&(Node[1].node.cache.state = dirty)&(2 = Node[1].node.cache.addr))) : Node[1].node.cache.data;
            ((cur_rule = c_LNCW22220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LNCW12220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LNCW22120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LNCW12120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LNCW22210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LNCW12210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LNCW22110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LNCW12110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW22222)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW12222)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW21222)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW11222)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW22212)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW12212)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW21212)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW11212)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW22221)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW12221)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW21221)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW11221)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW22211)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW12211)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW21211)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW11211)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            TRUE : Node[2].memory.data;
        esac;
    next(Node[2].node.cache.addr) := 
        case
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : 1;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : 2;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : 2;
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : 1;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : 1;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : 1;
            TRUE : Node[2].node.cache.addr;
        esac;
    next(Node[2].node.cache.data) := 
        case
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : Node[2].memory.data;
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : Node[1].memory.data;
            ((cur_rule = c_NLCW12220)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLCW12120)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLCW12210)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLCW12110)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            ((cur_rule = c_LCW12222)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW12122)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW12212)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW12112)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW12221)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW12121)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW12211)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW12111)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            TRUE : Node[2].node.cache.data;
        esac;
    next(Node[2].node.cache.state) := 
        case
            ((cur_rule = c_Replace12200)&((replace = torep)&(1 = curNode)&(2 = curCache)&(2 = Node[2].node.cache.addr))) : invalid;
            ((cur_rule = c_Replace12100)&((replace = torep)&(1 = curNode)&(2 = curCache)&(1 = Node[2].node.cache.addr))) : invalid;
            ((cur_rule = c_RepAll12200)&((replace = reqrepall)&(Node[2].node.cache.state = dirty)&(2 = Node[2].node.cache.addr))) : invalid;
            ((cur_rule = c_RepAll12100)&((replace = reqrepall)&(Node[2].node.cache.state = dirty)&(1 = Node[2].node.cache.addr))) : invalid;
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : valid;
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : valid;
            ((cur_rule = c_NLCW12220)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW12120)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW12210)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW12110)&((replace = non)&(Node[1].node.hasLock = FALSE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LCW12222)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW12122)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW12212)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW12112)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW12221)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW12121)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW12211)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW12111)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            TRUE : Node[2].node.cache.state;
        esac;
    next(Node[2].node.firstRead) := 
        case
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : FALSE;
            ((cur_rule = c_Acquire12000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : TRUE;
            ((cur_rule = c_Acquire11000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : TRUE;
            TRUE : Node[2].node.firstRead;
        esac;
    next(Node[2].node.hasLock) := 
        case
            ((cur_rule = c_Release22000)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2))) : FALSE;
            ((cur_rule = c_Release21000)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2))) : FALSE;
            ((cur_rule = c_Acquire22000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : TRUE;
            ((cur_rule = c_Acquire21000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : TRUE;
            TRUE : Node[2].node.hasLock;
        esac;
    next(Node[3].lock.inProtection) := 
        case
            ((cur_rule = c_Release22000)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2))) : FALSE;
            ((cur_rule = c_Release12000)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1))) : FALSE;
            ((cur_rule = c_LNCW21220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LNCW11220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LNCW21120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LNCW11120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LCW22122)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW12122)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW21122)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW11122)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW22112)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW12112)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW21112)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW11112)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : TRUE;
            TRUE : Node[3].lock.inProtection;
        esac;
    next(Node[3].node.cache.addr) := 
        case
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : 1;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : 2;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : 2;
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : 1;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : 1;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : 1;
            TRUE : Node[3].node.cache.addr;
        esac;
    next(Node[3].node.cache.data) := 
        case
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : Node[2].memory.data;
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : Node[1].memory.data;
            ((cur_rule = c_NLCW21220)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLCW21120)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLCW21210)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLCW21110)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            ((cur_rule = c_LCW21222)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW21122)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW21212)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW21112)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW21221)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW21121)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW21211)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW21111)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            TRUE : Node[3].node.cache.data;
        esac;
    next(Node[3].node.cache.state) := 
        case
            ((cur_rule = c_Replace21200)&((replace = torep)&(2 = curNode)&(1 = curCache)&(2 = Node[3].node.cache.addr))) : invalid;
            ((cur_rule = c_Replace21100)&((replace = torep)&(2 = curNode)&(1 = curCache)&(1 = Node[3].node.cache.addr))) : invalid;
            ((cur_rule = c_RepAll21200)&((replace = reqrepall)&(Node[3].node.cache.state = dirty)&(2 = Node[3].node.cache.addr))) : invalid;
            ((cur_rule = c_RepAll21100)&((replace = reqrepall)&(Node[3].node.cache.state = dirty)&(1 = Node[3].node.cache.addr))) : invalid;
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : valid;
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : valid;
            ((cur_rule = c_NLCW21220)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW21120)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW21210)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW21110)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LCW21222)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW21122)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW21212)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW21112)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW21221)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW21121)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW21211)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW21111)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : valid;
            TRUE : Node[3].node.cache.state;
        esac;
    next(Node[3].node.firstRead) := 
        case
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : FALSE;
            ((cur_rule = c_Acquire22000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : TRUE;
            ((cur_rule = c_Acquire21000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : TRUE;
            TRUE : Node[3].node.firstRead;
        esac;
    next(Node[4].lock.inProtection) := 
        case
            ((cur_rule = c_Release22000)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2))) : FALSE;
            ((cur_rule = c_Release12000)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1))) : FALSE;
            ((cur_rule = c_LNCW22220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LNCW12220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LNCW22120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LNCW12120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LCW22222)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW12222)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW21222)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW11222)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW22212)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW12212)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW21212)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCW11212)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : TRUE;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : TRUE;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : TRUE;
            TRUE : Node[4].lock.inProtection;
        esac;
    next(Node[4].node.cache.addr) := 
        case
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : 1;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : 2;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : 2;
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : 1;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : 1;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : 2;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : 1;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : 2;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : 1;
            TRUE : Node[4].node.cache.addr;
        esac;
    next(Node[4].node.cache.data) := 
        case
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : 2;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : 1;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : Node[2].memory.data;
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : Node[1].memory.data;
            ((cur_rule = c_NLCW22220)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLCW22120)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLCW22210)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLCW22110)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            ((cur_rule = c_LCW22222)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW22122)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 2;
            ((cur_rule = c_LCW22212)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW22112)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : 1;
            ((cur_rule = c_LCW22221)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW22121)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 2;
            ((cur_rule = c_LCW22211)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCW22111)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : 1;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : Node[2].memory.data;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : Node[1].memory.data;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : Node[2].memory.data;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : Node[1].memory.data;
            TRUE : Node[4].node.cache.data;
        esac;
    next(Node[4].node.cache.state) := 
        case
            ((cur_rule = c_Replace22200)&((replace = torep)&(2 = curNode)&(2 = curCache)&(2 = Node[4].node.cache.addr))) : invalid;
            ((cur_rule = c_Replace22100)&((replace = torep)&(2 = curNode)&(2 = curCache)&(1 = Node[4].node.cache.addr))) : invalid;
            ((cur_rule = c_RepAll22200)&((replace = reqrepall)&(Node[4].node.cache.state = dirty)&(2 = Node[4].node.cache.addr))) : invalid;
            ((cur_rule = c_RepAll22100)&((replace = reqrepall)&(Node[4].node.cache.state = dirty)&(1 = Node[4].node.cache.addr))) : invalid;
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : dirty;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : dirty;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : valid;
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : valid;
            ((cur_rule = c_NLCW22220)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW22120)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW22210)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_NLCW22110)&((replace = non)&(Node[2].node.hasLock = FALSE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : dirty;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            ((cur_rule = c_LCW22222)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW22122)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW22212)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 2))&((Node[2].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW22112)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 2))&((Node[1].lock.inProtection = TRUE) -> (1 = 2))))) : valid;
            ((cur_rule = c_LCW22221)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW22121)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW22211)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2)&(((Node[4].lock.inProtection = TRUE) -> (2 = 1))&((Node[2].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCW22111)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1)&(((Node[3].lock.inProtection = TRUE) -> (2 = 1))&((Node[1].lock.inProtection = TRUE) -> (1 = 1))))) : valid;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : valid;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : valid;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : valid;
            TRUE : Node[4].node.cache.state;
        esac;
    next(Node[4].node.firstRead) := 
        case
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : FALSE;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : FALSE;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : FALSE;
            ((cur_rule = c_Acquire22000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[2].lock.beUsed = FALSE))) : TRUE;
            ((cur_rule = c_Acquire21000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(Node[1].lock.beUsed = FALSE))) : TRUE;
            TRUE : Node[4].node.firstRead;
        esac;
    next(curCache) := 
        case
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : 1;
            ((cur_rule = c_CRIC22000)&((replace = randinv)&(2 = curNode)&(Node[4].node.cache.state = invalid))) : 2;
            ((cur_rule = c_CRIC12000)&((replace = randinv)&(1 = curNode)&(Node[2].node.cache.state = invalid))) : 2;
            ((cur_rule = c_CRIC21000)&((replace = randinv)&(2 = curNode)&(Node[3].node.cache.state = invalid))) : 1;
            ((cur_rule = c_CRIC11000)&((replace = randinv)&(1 = curNode)&(Node[1].node.cache.state = invalid))) : 1;
            ((cur_rule = c_CRC20000)&(replace = random)) : 2;
            ((cur_rule = c_CRC10000)&(replace = random)) : 1;
            TRUE : curCache;
        esac;
    next(curData) := 
        case
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            TRUE : curData;
        esac;
    next(curLock) := 
        case
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 2;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 2;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 1;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 1;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 2;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 2;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 1;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 1;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : 1;
            TRUE : curLock;
        esac;
    next(curMemory) := 
        case
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCRR22000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_NLNCRR12000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_NLNCRR21000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_NLNCRR11000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : 1;
            TRUE : curMemory;
        esac;
    next(curNode) := 
        case
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 2;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : 1;
            ((cur_rule = c_NLNCRR22000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_NLNCRR12000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 1;
            ((cur_rule = c_NLNCRR21000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 2;
            ((cur_rule = c_NLNCRR11000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 1;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 2;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 1;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 2;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 1;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 2;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : 2;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : 1;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : 2;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : 1;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : 2;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : 1;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : 1;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : 2;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : 1;
            TRUE : curNode;
        esac;
    next(repRule) := 
        case
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : nlncw;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : nlncw;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : nlncw;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : nlncw;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : nlncw;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : nlncw;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : nlncw;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : nlncw;
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : none;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : none;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : none;
            ((cur_rule = c_NLNCRR22000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : nlncr;
            ((cur_rule = c_NLNCRR12000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : nlncr;
            ((cur_rule = c_NLNCRR21000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : nlncr;
            ((cur_rule = c_NLNCRR11000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : nlncr;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : none;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : none;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : none;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : none;
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : none;
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : none;
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : none;
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : none;
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : lncnfr;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : lncnfr;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : lncfr;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : lncfr;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : lncfr;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : lncfr;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : lncfr;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : lncfr;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : lncfr;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : lncfr;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : lcfr;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : lcfr;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : lcfr;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : lcfr;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : lcfr;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : lcfr;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : lcfr;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : lcfr;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : lcfr;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : lcfr;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : lcfr;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : lcfr;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : lcfr;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : lcfr;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : lcfr;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : lcfr;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : none;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : none;
            TRUE : repRule;
        esac;
    next(replace) := 
        case
            ((cur_rule = c_Replace22200)&((replace = torep)&(2 = curNode)&(2 = curCache)&(2 = Node[4].node.cache.addr))) : done;
            ((cur_rule = c_Replace12200)&((replace = torep)&(1 = curNode)&(2 = curCache)&(2 = Node[2].node.cache.addr))) : done;
            ((cur_rule = c_Replace21200)&((replace = torep)&(2 = curNode)&(1 = curCache)&(2 = Node[3].node.cache.addr))) : done;
            ((cur_rule = c_Replace11200)&((replace = torep)&(1 = curNode)&(1 = curCache)&(2 = Node[1].node.cache.addr))) : done;
            ((cur_rule = c_Replace22100)&((replace = torep)&(2 = curNode)&(2 = curCache)&(1 = Node[4].node.cache.addr))) : done;
            ((cur_rule = c_Replace12100)&((replace = torep)&(1 = curNode)&(2 = curCache)&(1 = Node[2].node.cache.addr))) : done;
            ((cur_rule = c_Replace21100)&((replace = torep)&(2 = curNode)&(1 = curCache)&(1 = Node[3].node.cache.addr))) : done;
            ((cur_rule = c_Replace11100)&((replace = torep)&(1 = curNode)&(1 = curCache)&(1 = Node[1].node.cache.addr))) : done;
            ((cur_rule = c_RepAllDone00000)&((replace = reqrepall)&(((!(Node[4].node.cache.state = dirty))&(!(Node[3].node.cache.state = dirty)))&((!(Node[2].node.cache.state = dirty))&(!(Node[1].node.cache.state = dirty)))))) : repalldone;
            ((cur_rule = c_RNI20000)&((replace = require)&(2 = curNode)&((!(Node[4].node.cache.state = invalid))&(!(Node[3].node.cache.state = invalid))))) : random;
            ((cur_rule = c_RNI10000)&((replace = require)&(1 = curNode)&((!(Node[2].node.cache.state = invalid))&(!(Node[1].node.cache.state = invalid))))) : random;
            ((cur_rule = c_RI20000)&((replace = require)&(2 = curNode)&(!((!(Node[4].node.cache.state = invalid))&(!(Node[3].node.cache.state = invalid)))))) : randinv;
            ((cur_rule = c_RI10000)&((replace = require)&(1 = curNode)&(!((!(Node[2].node.cache.state = invalid))&(!(Node[1].node.cache.state = invalid)))))) : randinv;
            ((cur_rule = c_NLNCWR22200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : require;
            ((cur_rule = c_NLNCWR12200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : require;
            ((cur_rule = c_NLNCWR21200)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : require;
            ((cur_rule = c_NLNCWR11200)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : require;
            ((cur_rule = c_NLNCWR22100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : require;
            ((cur_rule = c_NLNCWR12100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2))))&((Node[4].lock.inProtection = FALSE)&(Node[2].lock.inProtection = FALSE)))) : require;
            ((cur_rule = c_NLNCWR21100)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : require;
            ((cur_rule = c_NLNCWR11100)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1))))&((Node[3].lock.inProtection = FALSE)&(Node[1].lock.inProtection = FALSE)))) : require;
            ((cur_rule = c_NLNCWD22220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD12220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD21220)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD11220)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD22120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD12120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD21120)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD11120)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 2))) : non;
            ((cur_rule = c_NLNCWD22210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD12210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD21210)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD11210)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD22110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD12110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD21110)&((replace = done)&(repRule = nlncw)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : non;
            ((cur_rule = c_NLNCWD11110)&((replace = done)&(repRule = nlncw)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curData = 1))) : non;
            ((cur_rule = c_NLNCRR22000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : require;
            ((cur_rule = c_NLNCRR12000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : require;
            ((cur_rule = c_NLNCRR21000)&((replace = non)&(Node[2].node.hasLock = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : require;
            ((cur_rule = c_NLNCRR11000)&((replace = non)&(Node[1].node.hasLock = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : require;
            ((cur_rule = c_NLNCRD22200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 2))) : non;
            ((cur_rule = c_NLNCRD12200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 2))) : non;
            ((cur_rule = c_NLNCRD21200)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 2))) : non;
            ((cur_rule = c_NLNCRD11200)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 2))) : non;
            ((cur_rule = c_NLNCRD22100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 2)&(curMemory = 1))) : non;
            ((cur_rule = c_NLNCRD12100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 2)&(curMemory = 1))) : non;
            ((cur_rule = c_NLNCRD21100)&((replace = done)&(repRule = nlncr)&(curNode = 2)&(curCache = 1)&(curMemory = 1))) : non;
            ((cur_rule = c_NLNCRD11100)&((replace = done)&(repRule = nlncr)&(curNode = 1)&(curCache = 1)&(curMemory = 1))) : non;
            ((cur_rule = c_LNCNFRR22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : require;
            ((cur_rule = c_LNCNFRR12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : require;
            ((cur_rule = c_LNCNFRR21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : require;
            ((cur_rule = c_LNCNFRR11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : require;
            ((cur_rule = c_LNCNFRR22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : require;
            ((cur_rule = c_LNCNFRR12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : require;
            ((cur_rule = c_LNCNFRR21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = FALSE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : require;
            ((cur_rule = c_LNCNFRR11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = FALSE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : require;
            ((cur_rule = c_LNCNFRD22220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD12220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD21220)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD11220)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD22120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD12120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD21120)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD11120)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCNFRD22210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD12210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD21210)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD11210)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD22110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD12110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD21110)&((replace = done)&(repRule = lncnfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCNFRD11110)&((replace = done)&(repRule = lncnfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRRA22200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA12200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA21200)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA11200)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA22100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 2)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 2)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA12100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 2)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 2)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA21100)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(((Node[4].node.cache.state = invalid)|(!(Node[4].node.cache.addr = 1)))&((Node[3].node.cache.state = invalid)|(!(Node[3].node.cache.addr = 1)))))) : reqrepall;
            ((cur_rule = c_LNCFRRA11100)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(((Node[2].node.cache.state = invalid)|(!(Node[2].node.cache.addr = 1)))&((Node[1].node.cache.state = invalid)|(!(Node[1].node.cache.addr = 1)))))) : reqrepall;
            ((cur_rule = c_LNCFRD22220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD12220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD21220)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD11220)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD22120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD12120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD21120)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD11120)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LNCFRD22210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD12210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD21210)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD11210)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD22110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD12110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD21110)&((replace = done)&(repRule = lncfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRD11110)&((replace = done)&(repRule = lncfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LNCFRAD00000)&((replace = repalldone)&(repRule = lncfr))) : require;
            ((cur_rule = c_LCFRRA22220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA12220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA21220)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA11220)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA22120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA12120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA21120)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA11120)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[2].lock.beUsed = TRUE)&(Node[2].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA22210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA12210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA21210)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[4].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA11210)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[2].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 2))) : reqrepall;
            ((cur_rule = c_LCFRRA22110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[4].node.cache.state = invalid))&(Node[4].node.cache.addr = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA12110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[2].node.cache.state = invalid))&(Node[2].node.cache.addr = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA21110)&((replace = non)&(Node[2].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 2)&(Node[3].node.firstRead = TRUE)&(!(Node[3].node.cache.state = invalid))&(Node[3].node.cache.addr = 1))) : reqrepall;
            ((cur_rule = c_LCFRRA11110)&((replace = non)&(Node[1].node.hasLock = TRUE)&(Node[1].lock.beUsed = TRUE)&(Node[1].lock.owner = 1)&(Node[1].node.firstRead = TRUE)&(!(Node[1].node.cache.state = invalid))&(Node[1].node.cache.addr = 1))) : reqrepall;
            ((cur_rule = c_LCFRD22220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD12220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD21220)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD11220)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD22120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD12120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD21120)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD11120)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 2))) : non;
            ((cur_rule = c_LCFRD22210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD12210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD21210)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD11210)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 2)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD22110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD12110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 2)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD21110)&((replace = done)&(repRule = lcfr)&(curNode = 2)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRD11110)&((replace = done)&(repRule = lcfr)&(curNode = 1)&(curCache = 1)&(curMemory = 1)&(curLock = 1))) : non;
            ((cur_rule = c_LCFRAD00000)&((replace = repalldone)&(repRule = lcfr))) : designated;
            ((cur_rule = c_DCND22000)&((replace = designated)&(2 = curNode)&(2 = curCache)&(!(Node[4].node.cache.state = dirty)))) : done;
            ((cur_rule = c_DCND12000)&((replace = designated)&(1 = curNode)&(2 = curCache)&(!(Node[2].node.cache.state = dirty)))) : done;
            ((cur_rule = c_DCND21000)&((replace = designated)&(2 = curNode)&(1 = curCache)&(!(Node[3].node.cache.state = dirty)))) : done;
            ((cur_rule = c_DCND11000)&((replace = designated)&(1 = curNode)&(1 = curCache)&(!(Node[1].node.cache.state = dirty)))) : done;
            ((cur_rule = c_DCD22000)&((replace = designated)&(2 = curNode)&(2 = curCache)&(Node[4].node.cache.state = dirty))) : torep;
            ((cur_rule = c_DCD12000)&((replace = designated)&(1 = curNode)&(2 = curCache)&(Node[2].node.cache.state = dirty))) : torep;
            ((cur_rule = c_DCD21000)&((replace = designated)&(2 = curNode)&(1 = curCache)&(Node[3].node.cache.state = dirty))) : torep;
            ((cur_rule = c_DCD11000)&((replace = designated)&(1 = curNode)&(1 = curCache)&(Node[1].node.cache.state = dirty))) : torep;
            ((cur_rule = c_CRIC22000)&((replace = randinv)&(2 = curNode)&(Node[4].node.cache.state = invalid))) : done;
            ((cur_rule = c_CRIC12000)&((replace = randinv)&(1 = curNode)&(Node[2].node.cache.state = invalid))) : done;
            ((cur_rule = c_CRIC21000)&((replace = randinv)&(2 = curNode)&(Node[3].node.cache.state = invalid))) : done;
            ((cur_rule = c_CRIC11000)&((replace = randinv)&(1 = curNode)&(Node[1].node.cache.state = invalid))) : done;
            ((cur_rule = c_CRC20000)&(replace = random)) : designated;
            ((cur_rule = c_CRC10000)&(replace = random)) : designated;
            TRUE : replace;
        esac;
    init(cur_rule) := {c_Acquire11000, c_Acquire21000, c_Acquire12000, c_Acquire22000, c_CRC10000, c_CRC20000, c_CRIC11000, c_CRIC21000, c_CRIC12000, c_CRIC22000, c_DCD11000, c_DCD21000, c_DCD12000, c_DCD22000, c_DCND11000, c_DCND21000, c_DCND12000, c_DCND22000, c_LCFRAD00000, c_LCFRD11110, c_LCFRD21110, c_LCFRD12110, c_LCFRD22110, c_LCFRD11210, c_LCFRD21210, c_LCFRD12210, c_LCFRD22210, c_LCFRD11120, c_LCFRD21120, c_LCFRD12120, c_LCFRD22120, c_LCFRD11220, c_LCFRD21220, c_LCFRD12220, c_LCFRD22220, c_LCFRRA11110, c_LCFRRA21110, c_LCFRRA12110, c_LCFRRA22110, c_LCFRRA11210, c_LCFRRA21210, c_LCFRRA12210, c_LCFRRA22210, c_LCFRRA11120, c_LCFRRA21120, c_LCFRRA12120, c_LCFRRA22120, c_LCFRRA11220, c_LCFRRA21220, c_LCFRRA12220, c_LCFRRA22220, c_LCW11111, c_LCW21111, c_LCW12111, c_LCW22111, c_LCW11211, c_LCW21211, c_LCW12211, c_LCW22211, c_LCW11121, c_LCW21121, c_LCW12121, c_LCW22121, c_LCW11221, c_LCW21221, c_LCW12221, c_LCW22221, c_LCW11112, c_LCW21112, c_LCW12112, c_LCW22112, c_LCW11212, c_LCW21212, c_LCW12212, c_LCW22212, c_LCW11122, c_LCW21122, c_LCW12122, c_LCW22122, c_LCW11222, c_LCW21222, c_LCW12222, c_LCW22222, c_LNCFRAD00000, c_LNCFRD11110, c_LNCFRD21110, c_LNCFRD12110, c_LNCFRD22110, c_LNCFRD11210, c_LNCFRD21210, c_LNCFRD12210, c_LNCFRD22210, c_LNCFRD11120, c_LNCFRD21120, c_LNCFRD12120, c_LNCFRD22120, c_LNCFRD11220, c_LNCFRD21220, c_LNCFRD12220, c_LNCFRD22220, c_LNCFRRA11100, c_LNCFRRA21100, c_LNCFRRA12100, c_LNCFRRA22100, c_LNCFRRA11200, c_LNCFRRA21200, c_LNCFRRA12200, c_LNCFRRA22200, c_LNCNFRD11110, c_LNCNFRD21110, c_LNCNFRD12110, c_LNCNFRD22110, c_LNCNFRD11210, c_LNCNFRD21210, c_LNCNFRD12210, c_LNCNFRD22210, c_LNCNFRD11120, c_LNCNFRD21120, c_LNCNFRD12120, c_LNCNFRD22120, c_LNCNFRD11220, c_LNCNFRD21220, c_LNCNFRD12220, c_LNCNFRD22220, c_LNCNFRR11100, c_LNCNFRR21100, c_LNCNFRR12100, c_LNCNFRR22100, c_LNCNFRR11200, c_LNCNFRR21200, c_LNCNFRR12200, c_LNCNFRR22200, c_LNCW11110, c_LNCW21110, c_LNCW12110, c_LNCW22110, c_LNCW11210, c_LNCW21210, c_LNCW12210, c_LNCW22210, c_LNCW11120, c_LNCW21120, c_LNCW12120, c_LNCW22120, c_LNCW11220, c_LNCW21220, c_LNCW12220, c_LNCW22220, c_NLCW11110, c_NLCW21110, c_NLCW12110, c_NLCW22110, c_NLCW11210, c_NLCW21210, c_NLCW12210, c_NLCW22210, c_NLCW11120, c_NLCW21120, c_NLCW12120, c_NLCW22120, c_NLCW11220, c_NLCW21220, c_NLCW12220, c_NLCW22220, c_NLNCRD11100, c_NLNCRD21100, c_NLNCRD12100, c_NLNCRD22100, c_NLNCRD11200, c_NLNCRD21200, c_NLNCRD12200, c_NLNCRD22200, c_NLNCRR11000, c_NLNCRR21000, c_NLNCRR12000, c_NLNCRR22000, c_NLNCWD11110, c_NLNCWD21110, c_NLNCWD12110, c_NLNCWD22110, c_NLNCWD11210, c_NLNCWD21210, c_NLNCWD12210, c_NLNCWD22210, c_NLNCWD11120, c_NLNCWD21120, c_NLNCWD12120, c_NLNCWD22120, c_NLNCWD11220, c_NLNCWD21220, c_NLNCWD12220, c_NLNCWD22220, c_NLNCWR11100, c_NLNCWR21100, c_NLNCWR12100, c_NLNCWR22100, c_NLNCWR11200, c_NLNCWR21200, c_NLNCWR12200, c_NLNCWR22200, c_RI10000, c_RI20000, c_RNI10000, c_RNI20000, c_Release11000, c_Release21000, c_Release12000, c_Release22000, c_RepAll11100, c_RepAll21100, c_RepAll12100, c_RepAll22100, c_RepAll11200, c_RepAll21200, c_RepAll12200, c_RepAll22200, c_RepAllDone00000, c_Replace11100, c_Replace21100, c_Replace12100, c_Replace22100, c_Replace11200, c_Replace21200, c_Replace12200, c_Replace22200};
    next(cur_rule) := {c_Acquire11000, c_Acquire21000, c_Acquire12000, c_Acquire22000, c_CRC10000, c_CRC20000, c_CRIC11000, c_CRIC21000, c_CRIC12000, c_CRIC22000, c_DCD11000, c_DCD21000, c_DCD12000, c_DCD22000, c_DCND11000, c_DCND21000, c_DCND12000, c_DCND22000, c_LCFRAD00000, c_LCFRD11110, c_LCFRD21110, c_LCFRD12110, c_LCFRD22110, c_LCFRD11210, c_LCFRD21210, c_LCFRD12210, c_LCFRD22210, c_LCFRD11120, c_LCFRD21120, c_LCFRD12120, c_LCFRD22120, c_LCFRD11220, c_LCFRD21220, c_LCFRD12220, c_LCFRD22220, c_LCFRRA11110, c_LCFRRA21110, c_LCFRRA12110, c_LCFRRA22110, c_LCFRRA11210, c_LCFRRA21210, c_LCFRRA12210, c_LCFRRA22210, c_LCFRRA11120, c_LCFRRA21120, c_LCFRRA12120, c_LCFRRA22120, c_LCFRRA11220, c_LCFRRA21220, c_LCFRRA12220, c_LCFRRA22220, c_LCW11111, c_LCW21111, c_LCW12111, c_LCW22111, c_LCW11211, c_LCW21211, c_LCW12211, c_LCW22211, c_LCW11121, c_LCW21121, c_LCW12121, c_LCW22121, c_LCW11221, c_LCW21221, c_LCW12221, c_LCW22221, c_LCW11112, c_LCW21112, c_LCW12112, c_LCW22112, c_LCW11212, c_LCW21212, c_LCW12212, c_LCW22212, c_LCW11122, c_LCW21122, c_LCW12122, c_LCW22122, c_LCW11222, c_LCW21222, c_LCW12222, c_LCW22222, c_LNCFRAD00000, c_LNCFRD11110, c_LNCFRD21110, c_LNCFRD12110, c_LNCFRD22110, c_LNCFRD11210, c_LNCFRD21210, c_LNCFRD12210, c_LNCFRD22210, c_LNCFRD11120, c_LNCFRD21120, c_LNCFRD12120, c_LNCFRD22120, c_LNCFRD11220, c_LNCFRD21220, c_LNCFRD12220, c_LNCFRD22220, c_LNCFRRA11100, c_LNCFRRA21100, c_LNCFRRA12100, c_LNCFRRA22100, c_LNCFRRA11200, c_LNCFRRA21200, c_LNCFRRA12200, c_LNCFRRA22200, c_LNCNFRD11110, c_LNCNFRD21110, c_LNCNFRD12110, c_LNCNFRD22110, c_LNCNFRD11210, c_LNCNFRD21210, c_LNCNFRD12210, c_LNCNFRD22210, c_LNCNFRD11120, c_LNCNFRD21120, c_LNCNFRD12120, c_LNCNFRD22120, c_LNCNFRD11220, c_LNCNFRD21220, c_LNCNFRD12220, c_LNCNFRD22220, c_LNCNFRR11100, c_LNCNFRR21100, c_LNCNFRR12100, c_LNCNFRR22100, c_LNCNFRR11200, c_LNCNFRR21200, c_LNCNFRR12200, c_LNCNFRR22200, c_LNCW11110, c_LNCW21110, c_LNCW12110, c_LNCW22110, c_LNCW11210, c_LNCW21210, c_LNCW12210, c_LNCW22210, c_LNCW11120, c_LNCW21120, c_LNCW12120, c_LNCW22120, c_LNCW11220, c_LNCW21220, c_LNCW12220, c_LNCW22220, c_NLCW11110, c_NLCW21110, c_NLCW12110, c_NLCW22110, c_NLCW11210, c_NLCW21210, c_NLCW12210, c_NLCW22210, c_NLCW11120, c_NLCW21120, c_NLCW12120, c_NLCW22120, c_NLCW11220, c_NLCW21220, c_NLCW12220, c_NLCW22220, c_NLNCRD11100, c_NLNCRD21100, c_NLNCRD12100, c_NLNCRD22100, c_NLNCRD11200, c_NLNCRD21200, c_NLNCRD12200, c_NLNCRD22200, c_NLNCRR11000, c_NLNCRR21000, c_NLNCRR12000, c_NLNCRR22000, c_NLNCWD11110, c_NLNCWD21110, c_NLNCWD12110, c_NLNCWD22110, c_NLNCWD11210, c_NLNCWD21210, c_NLNCWD12210, c_NLNCWD22210, c_NLNCWD11120, c_NLNCWD21120, c_NLNCWD12120, c_NLNCWD22120, c_NLNCWD11220, c_NLNCWD21220, c_NLNCWD12220, c_NLNCWD22220, c_NLNCWR11100, c_NLNCWR21100, c_NLNCWR12100, c_NLNCWR22100, c_NLNCWR11200, c_NLNCWR21200, c_NLNCWR12200, c_NLNCWR22200, c_RI10000, c_RI20000, c_RNI10000, c_RNI20000, c_Release11000, c_Release21000, c_Release12000, c_Release22000, c_RepAll11100, c_RepAll21100, c_RepAll12100, c_RepAll22100, c_RepAll11200, c_RepAll21200, c_RepAll12200, c_RepAll22200, c_RepAllDone00000, c_Replace11100, c_Replace21100, c_Replace12100, c_Replace22100, c_Replace11200, c_Replace21200, c_Replace12200, c_Replace22200};
